<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Perhacept&#39;s Blog</title>
  
  <subtitle>|Welcome</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://perhacept.github.io/"/>
  <updated>2020-05-05T15:57:46.169Z</updated>
  <id>https://perhacept.github.io/</id>
  
  <author>
    <name>Perhacept</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>通过编写中级计算器了解栈的应用</title>
    <link href="https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E9%80%9A%E8%BF%87%E7%BC%96%E5%86%99%E4%B8%AD%E7%BA%A7%E8%AE%A1%E7%AE%97%E5%99%A8%E4%BA%86%E8%A7%A3%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E9%80%9A%E8%BF%87%E7%BC%96%E5%86%99%E4%B8%AD%E7%BA%A7%E8%AE%A1%E7%AE%97%E5%99%A8%E4%BA%86%E8%A7%A3%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8/</id>
    <published>2020-05-05T15:54:04.000Z</published>
    <updated>2020-05-05T15:57:46.169Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><em>更新中</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="程序设计" scheme="https://perhacept.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="教程" scheme="https://perhacept.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="原创" scheme="https://perhacept.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="C语言" scheme="https://perhacept.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据结构" scheme="https://perhacept.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>通过processing快速入门编程</title>
    <link href="https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E9%80%9A%E8%BF%87processing%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E7%BC%96%E7%A8%8B/"/>
    <id>https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E9%80%9A%E8%BF%87processing%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E7%BC%96%E7%A8%8B/</id>
    <published>2020-05-05T15:51:00.000Z</published>
    <updated>2020-05-05T15:54:13.778Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><em>更新中</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="程序设计" scheme="https://perhacept.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="教程" scheme="https://perhacept.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="原创" scheme="https://perhacept.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="processing" scheme="https://perhacept.github.io/tags/processing/"/>
    
      <category term="互动艺术" scheme="https://perhacept.github.io/tags/%E4%BA%92%E5%8A%A8%E8%89%BA%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>快速上手openCV人脸识别</title>
    <link href="https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BopenCV%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    <id>https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BopenCV%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</id>
    <published>2020-05-05T15:25:12.000Z</published>
    <updated>2020-05-05T15:46:51.990Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="程序运行效果"><a href="#程序运行效果" class="headerlink" title="程序运行效果"></a>程序运行效果</h1><p><img src="/img/opcv1.png" alt="yunxingjietu1"><br><img src="/img/opcv2.png" alt="yunxingjietu2"></p><h1 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h1><p>需要安装openCV库（如果用的是python的虚拟环境，numpy可能也要提前手动安装一下）</p><p>我这里是用清华的镜像安装的：</p><p>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a> opencv-python</p><p>贴一些国内源，阿里云也挺好。</p><p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple/</a></p><p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple/</a></p><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a></p><p>华中理工大学：<a href="http://pypi.hustunique.com/" target="_blank" rel="noopener">http://pypi.hustunique.com/</a></p><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">import</span> tkinter.filedialog</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line"></span><br><span class="line">root = tkinter.Tk()</span><br><span class="line">root.title(<span class="string">"人脸识别程序"</span>)</span><br><span class="line">root.geometry(<span class="string">"399x100"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    file_path = tkinter.filedialog.askopenfilename(title=<span class="string">u'选择文件'</span>, initialdir=<span class="string">r'C:\Program Files'</span>)</span><br><span class="line">    <span class="comment"># 指定图片的人脸识别然后存储</span></span><br><span class="line">    <span class="comment"># img = cv.imread("test.jpg")</span></span><br><span class="line">    img = cv.imread(file_path)</span><br><span class="line">    face_color = (<span class="number">222</span>,<span class="number">156</span>,<span class="number">83</span>)<span class="comment">#莫兰蒂橘色</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将图像转换为灰度图像</span></span><br><span class="line">    grey = cv.cvtColor(img, cv.COLOR_BGR2GRAY)</span><br><span class="line">    <span class="comment"># 加载脸部识别的分类器</span></span><br><span class="line">    classfier = cv.CascadeClassifier(</span><br><span class="line">        cv.data.haarcascades + <span class="string">"haarcascade_frontalface_alt2.xml"</span>)</span><br><span class="line">    <span class="comment"># classfier = cv.CascadeClassifier(</span></span><br><span class="line">    <span class="comment">#     cv.data.haarcascades + "haarcascade_profileface.xml")</span></span><br><span class="line">    <span class="comment"># 探测图片中的人脸</span></span><br><span class="line">    faceRects = classfier.detectMultiScale(</span><br><span class="line">        grey, scaleFactor=<span class="number">1.2</span>, minNeighbors=<span class="number">3</span>, minSize=(<span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">    <span class="keyword">if</span> len(faceRects) &gt; <span class="number">0</span>:  <span class="comment"># 大于0表示检测到人脸</span></span><br><span class="line">        <span class="keyword">for</span> faceRect <span class="keyword">in</span> faceRects:  <span class="comment"># 针对每个人脸单独框出来</span></span><br><span class="line">            x, y, w, h = faceRect</span><br><span class="line">            cv.rectangle(img, (x - <span class="number">10</span>, y - <span class="number">10</span>), (x + w + <span class="number">10</span>,</span><br><span class="line">                                                 y + h + <span class="number">10</span>), face_color, <span class="number">3</span>)  <span class="comment"># 3，控制绿色框的粗细</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入图像</span></span><br><span class="line">    cv.imwrite(<span class="string">'output1.jpg'</span>, img)</span><br><span class="line">    cv.imshow(<span class="string">"Dettect Face"</span>, img)</span><br><span class="line">    cv.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv.destroyAllWindows()</span><br><span class="line">    print(<span class="string">"识别完成！"</span>)<span class="comment">#debug用 看看有没有执行完</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funcII</span><span class="params">()</span>:</span></span><br><span class="line">    file_path = tkinter.filedialog.askopenfilename(title=<span class="string">u'选择文件'</span>, initialdir=<span class="string">r'C:\Program Files'</span>)</span><br><span class="line">    <span class="comment"># 指定图片的识别然后存储</span></span><br><span class="line">    <span class="comment"># img = cv.imread("test.jpg")</span></span><br><span class="line">    img = cv.imread(file_path)</span><br><span class="line">    eye_color = (<span class="number">137</span>,<span class="number">190</span>,<span class="number">178</span>)<span class="comment">#莫兰蒂蓝色</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将图像转换为灰度图像</span></span><br><span class="line">    grey = cv.cvtColor(img, cv.COLOR_BGR2GRAY)</span><br><span class="line">    <span class="comment"># 加载眼部识别的分类器</span></span><br><span class="line">    classfier = cv.CascadeClassifier(</span><br><span class="line">        cv.data.haarcascades + <span class="string">"haarcascade_eye.xml"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 探测图片中的人眼</span></span><br><span class="line">    faceRects = classfier.detectMultiScale(</span><br><span class="line">        grey, scaleFactor=<span class="number">1.2</span>, minNeighbors=<span class="number">3</span>, minSize=(<span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">    <span class="keyword">if</span> len(faceRects) &gt; <span class="number">0</span>:  <span class="comment"># 大于0表示检测到眼睛</span></span><br><span class="line">        <span class="keyword">for</span> faceRect <span class="keyword">in</span> faceRects:  <span class="comment"># 针对每个眼睛单独框出来</span></span><br><span class="line">            x, y, w, h = faceRect</span><br><span class="line">            cv.ellipse(img,(int(x+<span class="number">0.5</span>*w),int(y+<span class="number">0.5</span>*h)),(<span class="number">16</span>,<span class="number">9</span>),<span class="number">0</span>,<span class="number">0</span>,<span class="number">360</span>,eye_color,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">            <span class="comment"># cv.rectangle(img, (x - 10, y - 10), (x + w + 10,</span></span><br><span class="line">            <span class="comment">#                                      y + h + 10), eye_color, 3)  # 3，控制绿色框的粗细</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入图像</span></span><br><span class="line">    cv.imwrite(<span class="string">'output1.jpg'</span>, img)</span><br><span class="line">    cv.imshow(<span class="string">"Dettect Face"</span>, img)</span><br><span class="line">    cv.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv.destroyAllWindows()</span><br><span class="line">    print(<span class="string">"识别完成！"</span>)<span class="comment">#debug用 看看有没有执行完</span></span><br><span class="line"><span class="comment">#循环主体</span></span><br><span class="line">click_button = tkinter.Button(root,text=<span class="string">"检测人脸"</span>,command=func)</span><br><span class="line">click_button.pack()</span><br><span class="line">clickII_button = tkinter.Button(root,text=<span class="string">"检测眼睛"</span>,command=funcII)</span><br><span class="line">clickII_button.pack()</span><br><span class="line">quit_button = tkinter.Button(root,text=<span class="string">"退出程序"</span>,command=root.quit)</span><br><span class="line">quit_button.pack()</span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>有些图片识别的准确率较低（眼部识别准确率最低）</li><li>就算增加侧脸识别功能，有些图片的人脸依旧识别无能</li><li>而且我的openCV支持不了中文路径，一旦选择的图片路径中有中文，会报错</li></ul><h1 id="原理部分"><a href="#原理部分" class="headerlink" title="原理部分"></a>原理部分</h1><p>程序主要运行步骤：</p><ul><li>导入图像</li><li>将图像转换为灰度图像（因为电子计算机，状态0和1；具体原因不赘述）</li><li>加载相应分类器</li><li>检测图片中的人脸，标注并显示</li></ul><p>循环主体部分是添加的功能，可以让用户选择加入图片和选择识别什么。</p><p><a href="https://www.kancloud.cn/aollo/aolloopencv/262768" target="_blank" rel="noopener">openCV中文文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="程序设计" scheme="https://perhacept.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Python3" scheme="https://perhacept.github.io/tags/Python3/"/>
    
      <category term="教程" scheme="https://perhacept.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="原创" scheme="https://perhacept.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="openCV" scheme="https://perhacept.github.io/tags/openCV/"/>
    
      <category term="人脸识别" scheme="https://perhacept.github.io/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
      <category term="人工智障" scheme="https://perhacept.github.io/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E9%9A%9C/"/>
    
  </entry>
  
  <entry>
    <title>用Python3写万能论证机</title>
    <link href="https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E7%94%A8Python3%E5%86%99%E4%B8%87%E8%83%BD%E8%AE%BA%E8%AF%81%E6%9C%BA/"/>
    <id>https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E7%94%A8Python3%E5%86%99%E4%B8%87%E8%83%BD%E8%AE%BA%E8%AF%81%E6%9C%BA/</id>
    <published>2020-05-05T12:21:11.000Z</published>
    <updated>2020-05-05T16:07:32.776Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="/img/114514.png" alt="xiaoguotu"><br>目的：等号左侧任意给定数，右侧给定数，输出以左侧数字经过一定运算达到的等式。</p><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"><span class="comment">#万  能  论  证  机</span></span><br><span class="line">a = <span class="string">'1 1 4 5 1 4'</span></span><br><span class="line">a1, a2, a3, a4, a5, a6 = a.split(<span class="string">' '</span>)</span><br><span class="line">i = [<span class="string">''</span>, <span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'*'</span>, <span class="string">'/'</span>]</span><br><span class="line">l = list(product(i, repeat=<span class="number">5</span>))</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> l:</span><br><span class="line">    c = a1+item[<span class="number">0</span>]+a2+item[<span class="number">1</span>]+a3+item[<span class="number">2</span>]+a4+item[<span class="number">3</span>]+a5+item[<span class="number">4</span>]+a6</span><br><span class="line">    <span class="keyword">if</span> eval(c) == <span class="number">24</span>:</span><br><span class="line">        print(c+<span class="string">' = 24'</span>)</span><br></pre></td></tr></table></figure><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>一句话：通过排列组合的方式，遍历所有可能性，输出符合条件的表达式。<br>代码具体分析：</p><ul><li><p><code>a1, a2, a3, a4, a5, a6 = a.split(&#39; &#39;)</code><br>链式赋值</p></li><li><p><code>l = list(product(i, repeat=5))</code><br>这行代码的意思是将“+-*/空格”进行排列组合（自身笛卡尔积），遍历其组成5个元素时的排列组合所有情况（因为a1到a6之间的间隙为5，所以这里repeat次数为5）。</p></li></ul><p>简单的案例：</p>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product(<span class="string">'ABCD'</span>, repeat=<span class="number">2</span>):</span><br><span class="line">  <span class="keyword">print</span> (<span class="string">''</span>.join(i),end=<span class="string">' '</span>)</span><br></pre></td></tr></table></figure><p>   输出结果：AA AB AC AD BA BB BC BD CA CB CC CD DA DB DC DD </p><p>函数具体理解：</p><p>  product 用于求多个可迭代对象的笛卡尔积(Cartesian Product)。</p><p>  特性：product(A, B) 等价于 ((x,y) for x in A for y in B)。</p><p>   一般使用形式：</p><p>  itertools.product(*iterables, repeat=1) </p><p>  iterables是可迭代对象,repeat指定iterable重复几次。</p><p>相关链接：</p><ul><li><a href="https://python.01314.cn/tag/product" target="_blank" rel="noopener">python itertools模块实现排列组合</a></li><li><a href="https://jingyan.baidu.com/article/154b46318c269d69ca8f41a6.html" target="_blank" rel="noopener">快速理解笛卡尔积</a></li></ul><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这是人工智能课（我的选修课，不是我的专业课）上布置的小作业，作业具体要求是：</p><p>请在数字之间填上加减乘除或者空这五种符号，让等式可以成立，1 2 3 … 9 = 2008（空符号就是把两位或多位数字合成一个数字）</p><p>作业源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line">a = <span class="string">'1 2 3 4 5 6 7 8 9'</span></span><br><span class="line">a1, a2, a3, a4, a5, a6, a7, a8, a9 = a.split(<span class="string">' '</span>)</span><br><span class="line">i = [<span class="string">''</span>, <span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'*'</span>, <span class="string">'/'</span>]</span><br><span class="line">l = list(product(i, repeat=<span class="number">8</span>))</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> l:</span><br><span class="line">    c = a1+item[<span class="number">0</span>]+a2+item[<span class="number">1</span>]+a3+item[<span class="number">2</span>]+a4+item[<span class="number">3</span>]+a5+item[<span class="number">4</span>]+a6+item[<span class="number">5</span>]+a7+item[<span class="number">6</span>]+a8+item[<span class="number">7</span>]+a9</span><br><span class="line">    <span class="keyword">if</span> eval(c) == <span class="number">2008</span>:</span><br><span class="line">        print(c+<span class="string">' = 2008'</span>)</span><br></pre></td></tr></table></figure><p>输出结果：</p><p>1+2+345*6+7-8*9 = 2008<br>1+2+345*6-7*8-9 = 2008</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="程序设计" scheme="https://perhacept.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Python3" scheme="https://perhacept.github.io/tags/Python3/"/>
    
      <category term="教程" scheme="https://perhacept.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="原创" scheme="https://perhacept.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>用桌面应用程序绘制分形</title>
    <link href="https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E7%94%A8%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%BB%98%E5%88%B6%E5%88%86%E5%BD%A2/"/>
    <id>https://perhacept.github.io/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E7%94%A8%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%BB%98%E5%88%B6%E5%88%86%E5%BD%A2/</id>
    <published>2020-05-05T10:22:45.000Z</published>
    <updated>2020-05-05T10:57:51.363Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="用桌面应用程序绘制分形和函数"><a href="#用桌面应用程序绘制分形和函数" class="headerlink" title="用桌面应用程序绘制分形和函数"></a>用桌面应用程序绘制分形和函数</h1><h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><p>运行程序，默认绘制出如图样式的朱莉亚集合<br><img src="/img/c1.png" alt="zhuliya"><br>按下键盘数字“2”可绘制曼德博集<br><img src="/img/mandebo.png" alt="mandebo"><br>按数字键盘上的“3”到“6”可展示朱利亚集合的不同种样式 如下图所示<br>按下3效果：<br><img src="/img/c3.png" alt="c3"><br>按下4效果：<br><img src="/img/c4.png" alt="c4"><br>按下5效果：<br><img src="/img/c5.png" alt="c5"><br>按下6效果：<br><img src="/img/c6.png" alt="c6"><br>按下数字键盘上的“7”到“9”以及“0”，进入函数的绘制模块。屏幕上会分别展示如下几何图形的绘制。<br>按下7效果：<br><img src="/img/7.png" alt="7"><br>按下8效果：<br><img src="/img/8.png" alt="8"><br>按下9效果：<br><img src="/img/9.png" alt="9"><br>按下0效果：<br><img src="/img/0.png" alt="10"><br>（除正弦函数外）<br>在函数的绘制模块中，按键盘上的WASD可以进行图像的移动。<br>特殊情况：按下“0”后（即绘制正弦函数的情况），再按AD不能进行图像的平移，按AD只能改变图像的振幅大小。而WS可以对图像进行上下平移。<br>你可以进入如下链接来观看展示效果。<br><a href="https://pan.baidu.com/s/10YAioro0_Y03ag5FYsK9Xg" target="_blank" rel="noopener">录制链接,提取码:qect</a></p><h1 id="理论原理"><a href="#理论原理" class="headerlink" title="理论原理"></a>理论原理</h1><p>完整代码见：<a href="https://pan.baidu.com/s/1WFM2QdmEWAbILqmaM4i40Q" target="_blank" rel="noopener">完整源码,提取码:t0gc</a></p><h2 id="按键部分的核心代码"><a href="#按键部分的核心代码" class="headerlink" title="按键部分的核心代码"></a>按键部分的核心代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line"><span class="keyword">switch</span> (wParam) &#123;</span><br><span class="line"><span class="keyword">case</span>  <span class="string">'1'</span>:</span><br><span class="line">oper = <span class="string">'1'</span>;</span><br><span class="line">NUMx = <span class="number">0.02</span>;</span><br><span class="line">NUMy = <span class="number">0.01</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">oper = <span class="string">'2'</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">oper = <span class="string">'1'</span>;</span><br><span class="line">NUMx = <span class="number">0.2</span>;</span><br><span class="line">NUMy = <span class="number">0.2</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'4'</span>:</span><br><span class="line">oper = <span class="string">'1'</span>;</span><br><span class="line">NUMx = <span class="number">0.5</span>;</span><br><span class="line">NUMy = <span class="number">0.2</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'5'</span>:</span><br><span class="line">oper = <span class="string">'1'</span>;</span><br><span class="line">NUMx = <span class="number">0.7</span>;</span><br><span class="line">NUMy = <span class="number">0.2</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'6'</span>:</span><br><span class="line">oper = <span class="string">'1'</span>;</span><br><span class="line">NUMx = <span class="number">0.2</span>;</span><br><span class="line">NUMy = <span class="number">0.7</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'7'</span>:</span><br><span class="line">oper = <span class="string">'7'</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'8'</span>:</span><br><span class="line">oper = <span class="string">'8'</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'9'</span>:</span><br><span class="line">oper = <span class="string">'9'</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'0'</span>:</span><br><span class="line">oper = <span class="string">'0'</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'W'</span>:</span><br><span class="line"><span class="built_in">step</span> = <span class="built_in">step</span> - <span class="number">10</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'A'</span>:</span><br><span class="line"></span><br><span class="line">amplitude = amplitude - <span class="number">10</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'S'</span>:</span><br><span class="line"><span class="built_in">step</span> = <span class="built_in">step</span> + <span class="number">10</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'D'</span>:</span><br><span class="line">amplitude = amplitude + <span class="number">10</span>;</span><br><span class="line">InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>此处的WM_KEYDOWN触发按键事件，是用来结合WM_PAINT屏幕绘制事件中的switch(oper)的不同事件(case)来达到不同的绘制效果。（除三角函数外）而WASD是通过改变像素点的横纵坐标加的值（step和amplitude）来使函数移动的。三角函数的情况中，amplitude改变的振幅大小，step使其上下移动（即改变像素点纵坐标的值）。这是最基础也最容易实现的部分。<br>以下是我对所展示的分形的数学意义的理解。<br><img src="/img/mandeboji.png" alt="mandeboji"><br><img src="/img/zhuliyaji.png" alt="zhuliyaji"><br>理解数学意义后，就可以写出绘制的代码了。更进一步的转换流程如下图。<br>曼德博集：<br><img src="/img/manzhuan.png" alt="manzhuan"><br>朱莉亚集（为了省事，朱利亚集合这里，我将Z0的横纵坐标分别以Cx,Cy表示。其中，定值复数的横纵坐标分别用NUMy、NUMy来表示，因为用变量表示能方便后续调试。按下数字按键的3到6时候，改变的其实是NUMx NUMy的值，这样就不用重复写绘制朱利亚集合的代码了。）：<br><img src="/img/zhuzhuan.png" alt="zhuzhuan"></p><h2 id="朱利亚集合核心代码"><a href="#朱利亚集合核心代码" class="headerlink" title="朱利亚集合核心代码"></a>朱利亚集合核心代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (Iteration &lt; IterationMax &amp;&amp; ((Zx2 + Zy2) &lt; ER2))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Iteration == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Zy = <span class="number">2</span> * Cx*Cy + NUMy;</span><br><span class="line">Zx = Cx * Cx - Cy * Cy + NUMx;</span><br><span class="line">Zx2 = Zx * Zx;</span><br><span class="line">Zy2 = Zy * Zy;</span><br><span class="line">Iteration++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Iteration &gt;= <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Zx = Zx * Zx - Zy * Zy + NUMx;</span><br><span class="line">Zy = <span class="number">2</span> * Zx*Zy + NUMy;</span><br><span class="line">Zx2 = Zx * Zx;</span><br><span class="line">Zy2 = Zy * Zy;</span><br><span class="line">Iteration++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数的数学意义：<br>玫瑰花函数：x=a* sin(nθ)* cos(θ), y=a<em>sin(nθ)</em> sin(θ)；对于方程式ρ=5* sin(3<em>θ)、ρ=5</em> sin(2<em>θ)、ρ=5</em> sin(3*θ/2)，分别对应的是三叶、四叶和六叶玫瑰线；<br>阿基米德螺旋线：x=(a+pθ)cos(θ),y=(a+pθ)sin(θ);<br>圆：x^2+y^2=c^2;即x=cos(θ),y=sin(θ);<br>正弦函数：y=sinx;</p><h2 id="函数部分的核心代码"><a href="#函数部分的核心代码" class="headerlink" title="函数部分的核心代码"></a>函数部分的核心代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (oper) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">zhuliyajihe:</span><br><span class="line">&#123;<span class="keyword">int</span> iX, iY;</span><br><span class="line"><span class="keyword">double</span> Cx, Cy;</span><br><span class="line"><span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line"><span class="keyword">double</span> PixelHeight;</span><br><span class="line">PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">COLORREF color;</span><br><span class="line"><span class="keyword">double</span> Zx, Zy;</span><br><span class="line"><span class="keyword">double</span> Zx2, Zy2;</span><br><span class="line"><span class="keyword">double</span> a = <span class="number">0</span>; <span class="keyword">double</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> Iteration;</span><br><span class="line"><span class="keyword">double</span> ER2;</span><br><span class="line">ER2 = EscapeRadius * EscapeRadius;</span><br><span class="line"><span class="keyword">for</span> (iY = <span class="number">0</span>; iY &lt; iYmax; iY++)</span><br><span class="line">&#123;</span><br><span class="line">Cy = CyMin + iY * PixelHeight;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(Cy) &lt; PixelHeight / <span class="number">2</span>) Cy = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; iXmax; iX++)</span><br><span class="line">&#123;</span><br><span class="line">Cx = CxMin + iX * PixelHeight;</span><br><span class="line">Zx = Zy = Zy2 = Zx2 = <span class="number">0.0</span>;</span><br><span class="line">Iteration = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (Iteration &lt; IterationMax &amp;&amp; ((Zx2 + Zy2) &lt; ER2))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Iteration == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Zy = <span class="number">2</span> * Cx*Cy + NUMy;</span><br><span class="line">Zx = Cx * Cx - Cy * Cy + NUMx;</span><br><span class="line">Zx2 = Zx * Zx;</span><br><span class="line">Zy2 = Zy * Zy;</span><br><span class="line">Iteration++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Iteration &gt;= <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Zx = Zx * Zx - Zy * Zy + NUMx;</span><br><span class="line">Zy = <span class="number">2</span> * Zx*Zy + NUMy;</span><br><span class="line">Zx2 = Zx * Zx;</span><br><span class="line">Zy2 = Zy * Zy;</span><br><span class="line">Iteration++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Iteration == IterationMax)</span><br><span class="line">color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">color = RGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);<span class="comment">//背景色白色</span></span><br><span class="line"></span><br><span class="line">SetPixel(hdc, iX, iY, color);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">mandeboji:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">&#123;<span class="keyword">int</span> iX, iY;<span class="comment">//像素位置</span></span><br><span class="line"><span class="keyword">double</span> Cx, Cy;<span class="comment">//数学公式中逻辑坐标</span></span><br><span class="line"><span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line"><span class="keyword">double</span> PixelHeight;</span><br><span class="line">PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">COLORREF color;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> Zx, Zy;</span><br><span class="line"><span class="keyword">double</span> Zx2, Zy2;</span><br><span class="line"><span class="keyword">double</span> a = <span class="number">0</span>; <span class="keyword">double</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> Iteration;<span class="comment">//记录递归次数</span></span><br><span class="line"><span class="keyword">double</span> ER2;</span><br><span class="line">ER2 = EscapeRadius * EscapeRadius;</span><br><span class="line"><span class="keyword">for</span> (iY = <span class="number">0</span>; iY &lt; iYmax; iY++)</span><br><span class="line">&#123;</span><br><span class="line">Cy = CyMin + iY * PixelHeight;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(Cy) &lt; PixelHeight / <span class="number">2</span>) Cy = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; iXmax; iX++)</span><br><span class="line">&#123;</span><br><span class="line">Cx = CxMin + iX * PixelHeight;</span><br><span class="line">Zx = Zy = Zy2 = Zx2 = <span class="number">0.0</span>;</span><br><span class="line">Iteration = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (Iteration &lt; IterationMax &amp;&amp; ((Zx2 + Zy2) &lt; ER2))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Zy = <span class="number">2</span> * Zx*Zy + Cy;</span><br><span class="line">Zx = Zx2 - Zy2 + Cx;</span><br><span class="line">Zx2 = Zx * Zx;</span><br><span class="line">Zy2 = Zy * Zy;</span><br><span class="line">Iteration++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Iteration == IterationMax)</span><br><span class="line">color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">color = RGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);<span class="comment">//背景色白色</span></span><br><span class="line"></span><br><span class="line">SetPixel(hdc, iX, iY, color);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">disanzhe:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'0'</span>:</span><br><span class="line">&#123;<span class="keyword">int</span> iX, iY;<span class="comment">//像素位置</span></span><br><span class="line"><span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line"><span class="keyword">double</span> PixelHeight;</span><br><span class="line">PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">COLORREF color;</span><br><span class="line"><span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; iXmax; iX++)</span><br><span class="line">&#123;</span><br><span class="line">iY = <span class="built_in">sin</span>(iX*<span class="number">3.1415926</span> / <span class="number">180</span>)*amplitude+<span class="built_in">step</span>;</span><br><span class="line">color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">SetPixel(hdc, iX, iY, color);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//c3</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">meiguihua:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'7'</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> iX, iY;</span><br><span class="line"><span class="keyword">int</span> iXII;</span><br><span class="line"><span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line"><span class="keyword">double</span> PixelHeight;</span><br><span class="line">PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">COLORREF color;</span><br><span class="line"><span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; <span class="number">800</span>; iX++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> ix = iX * <span class="number">3.1415926</span> / <span class="number">180</span>;</span><br><span class="line">iXII = <span class="number">50</span> * <span class="built_in">sin</span>(<span class="number">3</span>*ix/<span class="number">2</span>)* <span class="built_in">cos</span>(ix)+ amplitude;</span><br><span class="line">iY = <span class="number">50</span> * <span class="built_in">sin</span>(<span class="number">3</span>*ix/<span class="number">2</span>)* <span class="built_in">sin</span>(ix)+<span class="built_in">step</span>;</span><br><span class="line">color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">SetPixel(hdc, iXII, iY, color);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//c4</span></span><br><span class="line">yuan:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'9'</span>:</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> iX, iY;</span><br><span class="line"><span class="keyword">int</span> iXII;</span><br><span class="line"><span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line"><span class="keyword">double</span> PixelHeight;</span><br><span class="line">PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">COLORREF color;</span><br><span class="line"><span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; <span class="number">800</span>; iX++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> ix = iX * <span class="number">3.1415926</span> / <span class="number">180</span>;</span><br><span class="line">iXII = <span class="number">50</span>*<span class="built_in">cos</span>(ix) + amplitude;</span><br><span class="line">iY = <span class="number">50</span>*<span class="built_in">sin</span>(ix) + <span class="built_in">step</span>;</span><br><span class="line">color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">SetPixel(hdc, iXII, iY, color);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//c0</span></span><br><span class="line">luoxuanxian:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'8'</span>:</span><br><span class="line">&#123;</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> iX, iY;</span><br><span class="line"><span class="keyword">int</span> iXII;</span><br><span class="line"><span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line"><span class="keyword">double</span> PixelHeight;</span><br><span class="line">PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">COLORREF color;</span><br><span class="line"><span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; <span class="number">800</span>; iX++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> ix = iX * <span class="number">3.1415926</span> / <span class="number">180</span>;</span><br><span class="line">iXII = (<span class="number">5</span>+<span class="number">5</span>*ix) * <span class="built_in">cos</span>(ix) + amplitude;</span><br><span class="line">iY = (<span class="number">5</span>+<span class="number">5</span>*ix) * <span class="built_in">sin</span>(ix) + <span class="built_in">step</span>;</span><br><span class="line">color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">SetPixel(hdc, iXII, iY, color);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//c8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为圆、螺旋线、玫瑰花并不是狭义上一个x对应一个y的函数，在平面坐标中需要用参数方程表示，因而我引入了一个新的临时变量iXII。最终绘制在屏幕上的像素点横坐标其实是iXII的值，而不是iX的值。<br>ix这个临时变量则是我用来进行角度和弧度转换的。平面坐标上的点对应的实数值应该是弧度，而不是角度。计算机默认运算时调用的则是角度，所以要进行换算。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>分形部分：绘制曼德博集和茱莉亚集</p><p>函数部分：绘制圆、螺旋线、玫瑰花、正弦函数</p><p>后续我会更新程序设计分类的更多内容，比如如何用C编写生命游戏等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="程序设计" scheme="https://perhacept.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="教程" scheme="https://perhacept.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="原创" scheme="https://perhacept.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="计算机图形学" scheme="https://perhacept.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>unity的安卓端开发</title>
    <link href="https://perhacept.github.io/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/2020-05-05/unity%E7%9A%84%E5%AE%89%E5%8D%93%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    <id>https://perhacept.github.io/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/2020-05-05/unity%E7%9A%84%E5%AE%89%E5%8D%93%E7%AB%AF%E5%BC%80%E5%8F%91/</id>
    <published>2020-05-04T20:59:44.000Z</published>
    <updated>2020-05-05T10:19:45.583Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>看到很多网友在unity的安卓部署上有障碍，于是我写了这篇教程，希望对你有帮助，如果有问题，请给我留言。</p><h1 id="选择适合的unity版本"><a href="#选择适合的unity版本" class="headerlink" title="选择适合的unity版本"></a>选择适合的unity版本</h1><p>通常，我会选择使用早期的unity版本，而不是在最新的。因为早期版本的unity稳定、教程多。新版本有些地方增改幅度较大 跟着老教程没法做。<br>当然，更古早版本的也不推荐，过于旧的版本有功能限制，有些插件装不了。<br>综合来看，选择unity2017、unity2018比较合适。<br>以下的教程以unity 2017 为例。</p><h1 id="在手机上的快速测试-Remote"><a href="#在手机上的快速测试-Remote" class="headerlink" title="在手机上的快速测试-Remote"></a>在手机上的快速测试-Remote</h1><p>除却导出apk外，在写程序需要调试的时候，我建议下载unity的remote。部署好后，只需要通过usb接入电脑，就能快速调试。<br>以下安装部署步骤以unity remote 4为例。</p><p><strong>注：以下教程仅针对安卓手机</strong></p><ol><li>手机端下载并安装remote4的apk，电脑端导入相应的package<br>unity remote4的安卓apk和unity package下载：<br>链接：<a href="https://pan.baidu.com/s/1uM7eekap66L5EcAynXjoOw" target="_blank" rel="noopener">https://pan.baidu.com/s/1uM7eekap66L5EcAynXjoOw</a><br>提取码：0l7e<br>（导入package方式：Assets-import package-Custom package）</li><li>手机打开usb调试模式，将手机连接到电脑上；在选择连接模式时，选择MTP（媒体设备）的连接方式<br><a href="https://jingyan.baidu.com/article/574c52196529b26c8d9dc1fa.html" target="_blank" rel="noopener">小米手机打开usb调试模式I</a><br><a href="https://jingyan.baidu.com/article/f54ae2fc4bad0b1e93b8494b.html" target="_blank" rel="noopener">小米手机打开usb调试模式II</a><br><a href="https://jingyan.baidu.com/article/2a138328ec2c43074a134fb4.html" target="_blank" rel="noopener">华为手机打开usb调试模式</a></li><li>手机端打开remote4的程序</li><li>电脑端关闭Unity，再打开Unity（需要在手机打开remote4情况下，打开Unity）</li><li>在Unity项目的Edit-Project Settings-Editor中，会有Unity Remote选项，在Unity Remote-Device中，选择Any Android Device（换新项目的时候这里需要重新设定）<br>注：Unity Remote的横纵屏方向在Default orientation里改变</li><li>运行游戏，可以看到手机游戏界面和电脑游戏界面一致</li></ol><h1 id="部署SDK和JDK，导出安卓APK"><a href="#部署SDK和JDK，导出安卓APK" class="headerlink" title="部署SDK和JDK，导出安卓APK"></a>部署SDK和JDK，导出安卓APK</h1><p><strong>注：以下教程仅针对Windows平台</strong></p><p>jdk和sdk以及tools下载：<br>链接：<a href="https://pan.baidu.com/s/1et-ITBJe8OqYRk8n4jLzkA" target="_blank" rel="noopener">https://pan.baidu.com/s/1et-ITBJe8OqYRk8n4jLzkA</a><br>提取码：9jqy<br>下载好后有三个文件</p><ul><li>android-studio-ide-192.6392135-windows.exe</li><li>jdk-8u251-windows-x64.exe</li><li>tools_r25.2.3-windows.zip</li></ul><h2 id="安装SDK"><a href="#安装SDK" class="headerlink" title="安装SDK"></a>安装SDK</h2><p>目前官网的下载方式仅支持通过Android Studio安装SDK。<br>安装Android Studio使得之后的版本更新更便捷，同时也支持更新的unity版本。<br>下载好android-studio-ide-192.6392135-windows.exe后，点击运行就可以如下安装sdk了。<br>通过以下两种方式都可以打开SDK Manager<br><img src="/img/sdk01.png" alt="预览图1"><br><img src="/img/sdk02.png" alt="预览图2"><br>打开SDK Manager后，如下图安装即可。(这里一定要记住SDK的位置)<br><img src="/img/sdk03.png" alt="预览图3"><br>SDK tools的安装选择可以参考如下图：<br><img src="/img/sdk04.png" alt="预览图4"><br>然后进入SDK的安装目录，在Android\Sdk目录下，将tools文件夹备份一下，备份好后用tools_r25.2.3-windows.zip解压出来的文件替换。原因是新版本的SDK tools已经不适配老版本的unity了，替换后SDK才能正确部署。比如Android -h的命令，在新版本的SDK中不能使用了，而unity依旧会调用android命令。<br>同时，替换好后，SDK Manager.exe也能直接使用了，不会闪退了，也不需要通过Android Studio调用了。之后的安装可以直接调用SDK Manager了。</p><h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><p>下载好jdk-8u251-windows-x64.exe，点击进行jdk安装。</p><h2 id="部署SDK和JDK的环境变量"><a href="#部署SDK和JDK的环境变量" class="headerlink" title="部署SDK和JDK的环境变量"></a>部署SDK和JDK的环境变量</h2><p>安装好jdk和sdk后，其他的详细教程跟着<a href="https://www.cnblogs.com/520YAOER/p/9705187.html?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">这个教程</a>做就可以了（里面有需要用到SDK Manager，还会教你配置sdk和jdk的环境变量）。<br>快捷键 win+R ，运行cmd，输入android -h，回车，出现一长串list并且没有报错信息，说明SDK部署成功，如下图。<br><img src="/img/sdk5.png" alt="预览图5"><br>快捷键 win+R ，运行cmd，输入java，回车，出现一长串list并且没有报错信息，说明JDK部署成功，如下图。<br><img src="/img/jdk6.png" alt="预览图6"></p><h2 id="unity导出apk"><a href="#unity导出apk" class="headerlink" title="unity导出apk"></a>unity导出apk</h2><p>需要注意的是，package name一定要修改，改成”com.Company.项目名”的格式，不然会报错。建议Build System改成Internal会快一些。<br><a href="https://blog.csdn.net/littlewhitelv/article/details/86596809" target="_blank" rel="noopener">unity导出apk详细教程</a></p><h1 id="可能遇到的问题与解决方案"><a href="#可能遇到的问题与解决方案" class="headerlink" title="可能遇到的问题与解决方案"></a>可能遇到的问题与解决方案</h1><ol><li><p>jdk版本与sdk版本不一致<br> 方案：官网下载适配的jdk。</p><p><a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">官网下载链接</a><br><a href="https://blog.csdn.net/u010825468/article/details/78909550" target="_blank" rel="noopener">版本对应表格详细版</a></p></li></ol><table><thead><tr><th>安卓版本</th><th>SDK版本</th><th>JDK版本</th></tr></thead><tbody><tr><td>5.1</td><td>22</td><td>22</td></tr><tr><td>6.0</td><td>23</td><td>23</td></tr></tbody></table><ol start="2"><li>sdk版本与jdk版本不一致<br>方案：通过SDK Manager或者 Android Studio安装相应sdk。</li><li>新版本sdk不适配老版本unity<br>方案：下载旧版本tools，并替换新版本tools。<br><a href="https://pan.baidu.com/s/1et-ITBJe8OqYRk8n4jLzkA" target="_blank" rel="noopener">下载链接,提取码:9jqy</a></li><li>环境变量没有配置<br>方案：见<a href="https://www.cnblogs.com/520YAOER/p/9705187.html?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">这个教程</a>。</li></ol><p>如果有需要帮助的，请给我留言。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="游戏开发" scheme="https://perhacept.github.io/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="教程" scheme="https://perhacept.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="原创" scheme="https://perhacept.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="unity" scheme="https://perhacept.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>用hexo搭建博客</title>
    <link href="https://perhacept.github.io/hexo/2020-05-04/%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://perhacept.github.io/hexo/2020-05-04/%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-05-04T11:08:40.000Z</published>
    <updated>2020-05-05T10:34:27.115Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="为什么我选择用hexo搭建博客，以及一些个人经验"><a href="#为什么我选择用hexo搭建博客，以及一些个人经验" class="headerlink" title="为什么我选择用hexo搭建博客，以及一些个人经验"></a>为什么我选择用hexo搭建博客，以及一些个人经验</h1><h2 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h2><h3 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h3><p>前些阵子，网上冲浪的时候，我刷到了其他人的博客，唤起了我很多的回忆，踌躇良久，决定重新搭建一个个人博客。<br>为什么说是重新呢？因为以前我用Wordpress搭建过相关的博客。那个时候我租的服务器在欧洲，国内访问还比较慢，再加上学业繁忙无心经营、租服务器的支出较大，渐渐地，在服务器以及域名过期后，我没有续租了。<br>现在留给我的大概只有空间相册中保存的这两张图片了吧。<br><img src="/img/z91.jpg" alt="古早Wordpress博客手机端界面预览图1"><br><img src="/img/z92.jpg" alt="古早Wordpress博客手机端界面预览图2"></p><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>我用博客主要来记录一些随笔、分享一些有趣的程序代码、计算机相关之类的文章（或是原创，或是转载引用）。<br>我个人目前的职业方向是游戏制作人，现在游戏设计相关专业在读。我对技术向的内容感兴趣，分享的内容也偏这些方面。<br>个人擅长的是：文案策划、游戏策划。所以这块方面的内容我打包票会写得比较精良。<br>会的东西：编曲、编程（流行的语言大致都会一些，比较熟练的是C、python、java、C#、bat批处理、processing）、视频剪辑、文案&amp;游戏策划、游戏引擎（unity和UE4）……</p><h2 id="建站工具的比较"><a href="#建站工具的比较" class="headerlink" title="建站工具的比较"></a>建站工具的比较</h2><p>我个人比较了解的是：Wordpress和hexo，就谈它们两个叭。<br>1.Wordpress：</p><ul><li>需搭配付费服务器和域名（贵 很贵 非常贵）</li><li>安装简单</li><li>搭配dashboard，搭建好后更新文章和界面便捷</li><li>插件较多，可操作性强</li><li>上限高，下限低（入门简单，扩展性高）</li><li>自带seo优化<br>（综合：适合中小型网站，适合搭载博客）<br>（搭配强大的插件，也适合作中小型企业网站）</li></ul><p>2.hexo</p><ul><li>支持免费建站，建站成本低（可搭配github pages，也可搭配其他服务器）</li><li>稳定</li><li>门槛较高</li><li>无seo优化，需手动优化<br>（综合：比较适合技术宅作个人博客）<br>（不适合中小型网站）<br>相关优质链接：<a href="https://www.jianshu.com/p/c4f145fdd637" target="_blank" rel="noopener">博客搭建可行性方案</a></li></ul><h2 id="使用hexo建站流程"><a href="#使用hexo建站流程" class="headerlink" title="使用hexo建站流程"></a>使用hexo建站流程</h2><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><p>官方文档：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官方文档</a><br>小白教程A：<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo搭建教程</a>（这个比较综合和全）<br>小白教程B：<a href="https://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">手把手教你用Hexo+Github 搭建属于自己的博客</a>（这个前期比较详细，就是比较老了，适合作参考）<br>小白教程C：<a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="noopener">hexo详细搭建教程</a>（适合作参考）<br>hexo官方主题：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官方主题集合</a><br>Markdown基础语法：<a href="https://segmentfault.com/markdown" target="_blank" rel="noopener">Markdown基础语法</a><br>Markdown语法大全：<a href="https://www.jianshu.com/p/ebe52d2d468f" target="_blank" rel="noopener">Markdown语法大全(超级版)</a></p><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><p>使用Termux手机端建站：<a href="https://www.sqlsec.com/2018/05/termux.html?yyue=a21bo.50862.201879" target="_blank" rel="noopener">Termux 高级终端安装使用配置教程</a><br>博客美化：<a href="https://blog.csdn.net/weixin_40539125/article/details/89682652" target="_blank" rel="noopener">hexo的美化——拓展篇</a><br>博客美化II：<a href="https://www.jianshu.com/p/6051077119d1" target="_blank" rel="noopener">个人博客进行深度美化</a><br>迁移：<a href="https://www.jianshu.com/p/153490a029a5" target="_blank" rel="noopener">博客迁移到新电脑</a></p>]]></content>
    
    <summary type="html">
    
      为什么我选择用hexo搭建博客，以及一些个人经验
    
    </summary>
    
    
      <category term="hexo" scheme="https://perhacept.github.io/categories/hexo/"/>
    
    
      <category term="原创" scheme="https://perhacept.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="随笔" scheme="https://perhacept.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="hexo" scheme="https://perhacept.github.io/tags/hexo/"/>
    
      <category term="搭建博客" scheme="https://perhacept.github.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
