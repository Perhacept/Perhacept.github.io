<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>unity的安卓端开发</title>
    <url>/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/2020-05-05/unity%E7%9A%84%E5%AE%89%E5%8D%93%E7%AB%AF%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="重要更新声明！以下建议目前不适用了。现在推荐用unity2019-3（自带安卓支持组件）！老韩的课就是用的2019-3。这个版本比较稳定，算是unity的向下兼容中做得比较好的版本了（unity的向下兼容你懂的）。2019-3稳定性极强，我爱unity2019-3。"><a href="#重要更新声明！以下建议目前不适用了。现在推荐用unity2019-3（自带安卓支持组件）！老韩的课就是用的2019-3。这个版本比较稳定，算是unity的向下兼容中做得比较好的版本了（unity的向下兼容你懂的）。2019-3稳定性极强，我爱unity2019-3。" class="headerlink" title="重要更新声明！以下建议目前不适用了。现在推荐用unity2019.3（自带安卓支持组件）！老韩的课就是用的2019.3。这个版本比较稳定，算是unity的向下兼容中做得比较好的版本了（unity的向下兼容你懂的）。2019.3稳定性极强，我爱unity2019.3。"></a>重要更新声明！以下建议目前不适用了。现在推荐用unity2019.3（自带安卓支持组件）！老韩的课就是用的2019.3。这个版本比较稳定，算是unity的向下兼容中做得比较好的版本了（unity的向下兼容你懂的）。2019.3稳定性极强，我爱unity2019.3。</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>看到很多网友在unity的安卓部署上有障碍，于是我写了这篇教程，希望对你有帮助，如果有问题，请给我留言。</p>
<h1 id="选择适合的unity版本"><a href="#选择适合的unity版本" class="headerlink" title="选择适合的unity版本"></a>选择适合的unity版本</h1><p>通常，我会选择使用早期的unity版本，而不是在最新的。因为早期版本的unity稳定、教程多。新版本有些地方增改幅度较大，跟着老教程没法做。<br>当然，更古早版本的也不推荐，过于旧的版本有功能限制，有些插件装不了。<br>综合来看，选择unity2017、unity2018比较合适。<br>以下的教程以unity 2017 为例。</p>
<h1 id="在手机上的快速测试-Remote"><a href="#在手机上的快速测试-Remote" class="headerlink" title="在手机上的快速测试-Remote"></a>在手机上的快速测试-Remote</h1><p>除却导出apk外，在写程序需要调试的时候，我建议下载unity的remote。部署好后，只需要通过usb接入电脑，就能快速调试。<br>以下安装部署步骤以unity remote 4为例。</p>
<p><strong>注：以下教程仅针对安卓手机</strong></p>
<ol>
<li>手机端下载并安装remote4的apk，电脑端导入相应的package<br>unity remote4的安卓apk和unity package下载：<br>链接：<a href="https://pan.baidu.com/s/1uM7eekap66L5EcAynXjoOw" target="_blank" rel="noopener">https://pan.baidu.com/s/1uM7eekap66L5EcAynXjoOw</a><br>提取码：0l7e<br>（导入package方式：Assets-import package-Custom package）</li>
<li>手机打开usb调试模式，将手机连接到电脑上；在选择连接模式时，选择MTP（媒体设备）的连接方式<br><a href="https://jingyan.baidu.com/article/574c52196529b26c8d9dc1fa.html" target="_blank" rel="noopener">小米手机打开usb调试模式I</a><br><a href="https://jingyan.baidu.com/article/f54ae2fc4bad0b1e93b8494b.html" target="_blank" rel="noopener">小米手机打开usb调试模式II</a><br><a href="https://jingyan.baidu.com/article/2a138328ec2c43074a134fb4.html" target="_blank" rel="noopener">华为手机打开usb调试模式</a></li>
<li>手机端打开remote4的程序</li>
<li>电脑端关闭Unity，再打开Unity（需要在手机打开remote4情况下，打开Unity）</li>
<li>在Unity项目的Edit-Project Settings-Editor中，会有Unity Remote选项，在Unity Remote-Device中，选择Any Android Device（换新项目的时候这里需要重新设定）<br>注：Unity Remote的横纵屏方向在Default orientation里改变</li>
<li>运行游戏，可以看到手机游戏界面和电脑游戏界面一致</li>
</ol>
<h1 id="部署SDK和JDK，导出安卓APK"><a href="#部署SDK和JDK，导出安卓APK" class="headerlink" title="部署SDK和JDK，导出安卓APK"></a>部署SDK和JDK，导出安卓APK</h1><p><strong>注：以下教程仅针对Windows平台</strong></p>
<p>jdk和sdk以及tools下载：<br>链接：<a href="https://pan.baidu.com/s/1et-ITBJe8OqYRk8n4jLzkA" target="_blank" rel="noopener">https://pan.baidu.com/s/1et-ITBJe8OqYRk8n4jLzkA</a><br>提取码：9jqy<br>下载好后有三个文件</p>
<ul>
<li>android-studio-ide-192.6392135-windows.exe</li>
<li>jdk-8u251-windows-x64.exe</li>
<li>tools_r25.2.3-windows.zip</li>
</ul>
<h2 id="安装SDK"><a href="#安装SDK" class="headerlink" title="安装SDK"></a>安装SDK</h2><p>目前官网的下载方式仅支持通过Android Studio安装SDK。<br>安装Android Studio使得之后的版本更新更便捷，同时也支持更新的unity版本。<br>下载好android-studio-ide-192.6392135-windows.exe后，点击运行就可以如下安装sdk了。<br>通过以下两种方式都可以打开SDK Manager<br><img src="/img/sdk01.png" alt="预览图1"><br><img src="/img/sdk02.png" alt="预览图2"><br>打开SDK Manager后，如下图安装即可。(这里一定要记住SDK的位置)<br><img src="/img/sdk03.png" alt="预览图3"><br>SDK tools的安装选择可以参考如下图：<br><img src="/img/sdk04.png" alt="预览图4"><br>然后进入SDK的安装目录，在Android\Sdk目录下，将tools文件夹备份一下，备份好后用tools_r25.2.3-windows.zip解压出来的文件替换。原因是新版本的SDK tools已经不适配老版本的unity了，替换后SDK才能正确部署。比如Android -h的命令，在新版本的SDK中不能使用了，而unity依旧会调用android命令。<br>同时，替换好后，SDK Manager.exe也能直接使用了，不会闪退了，也不需要通过Android Studio调用了。之后的安装可以直接调用SDK Manager了。</p>
<h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><p>下载好jdk-8u251-windows-x64.exe，点击进行jdk安装。</p>
<h2 id="部署SDK和JDK的环境变量"><a href="#部署SDK和JDK的环境变量" class="headerlink" title="部署SDK和JDK的环境变量"></a>部署SDK和JDK的环境变量</h2><p>安装好jdk和sdk后，其他的详细教程跟着<a href="https://www.cnblogs.com/520YAOER/p/9705187.html?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">这个教程</a>做就可以了（里面有需要用到SDK Manager，还会教你配置sdk和jdk的环境变量）。<br>快捷键 win+R ，运行cmd，输入android -h，回车，出现一长串list并且没有报错信息，说明SDK部署成功，如下图。<br><img src="/img/sdk5.png" alt="预览图5"><br>快捷键 win+R ，运行cmd，输入java，回车，出现一长串list并且没有报错信息，说明JDK部署成功，如下图。<br><img src="/img/jdk6.png" alt="预览图6"></p>
<h2 id="unity导出apk"><a href="#unity导出apk" class="headerlink" title="unity导出apk"></a>unity导出apk</h2><p>需要注意的是，package name一定要修改，改成”com.Company.项目名”的格式，不然会报错。建议Build System改成Internal会快一些。<br><a href="https://blog.csdn.net/littlewhitelv/article/details/86596809" target="_blank" rel="noopener">unity导出apk详细教程</a></p>
<h1 id="可能遇到的问题与解决方案"><a href="#可能遇到的问题与解决方案" class="headerlink" title="可能遇到的问题与解决方案"></a>可能遇到的问题与解决方案</h1><ol>
<li><p>jdk版本与sdk版本不一致<br> 方案：官网下载适配的jdk。</p>
<p><a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">官网下载链接</a><br><a href="https://blog.csdn.net/u010825468/article/details/78909550" target="_blank" rel="noopener">版本对应表格详细版</a></p>
</li>
</ol>
<table>
<thead>
<tr>
<th>安卓版本</th>
<th>SDK版本</th>
<th>JDK版本</th>
</tr>
</thead>
<tbody><tr>
<td>5.1</td>
<td>22</td>
<td>22</td>
</tr>
<tr>
<td>6.0</td>
<td>23</td>
<td>23</td>
</tr>
</tbody></table>
<ol start="2">
<li>sdk版本与jdk版本不一致<br>方案：通过SDK Manager或者 Android Studio安装相应sdk。</li>
<li>新版本sdk不适配老版本unity<br>方案：下载旧版本tools，并替换新版本tools。<br><a href="https://pan.baidu.com/s/1et-ITBJe8OqYRk8n4jLzkA" target="_blank" rel="noopener">下载链接,提取码:9jqy</a></li>
<li>环境变量没有配置<br>方案：见<a href="https://www.cnblogs.com/520YAOER/p/9705187.html?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">这个教程</a>。</li>
</ol>
<p>如果有需要帮助的，请给我留言。</p>
]]></content>
      <categories>
        <category>游戏开发</category>
      </categories>
      <tags>
        <tag>unity</tag>
        <tag>教程</tag>
        <tag>原创</tag>
      </tags>
  </entry>
  <entry>
    <title>用Python3写万能论证机</title>
    <url>/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E7%94%A8Python3%E5%86%99%E4%B8%87%E8%83%BD%E8%AE%BA%E8%AF%81%E6%9C%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="/img/114514.png" alt="xiaoguotu"><br>目的：等号左侧任意给定数，右侧给定数，输出以左侧数字经过一定运算达到的等式。</p>
<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"><span class="comment">#万  能  论  证  机</span></span><br><span class="line">a = <span class="string">'1 1 4 5 1 4'</span></span><br><span class="line">a1, a2, a3, a4, a5, a6 = a.split(<span class="string">' '</span>)</span><br><span class="line">i = [<span class="string">''</span>, <span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'*'</span>, <span class="string">'/'</span>]</span><br><span class="line">l = list(product(i, repeat=<span class="number">5</span>))</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> l:</span><br><span class="line">    c = a1+item[<span class="number">0</span>]+a2+item[<span class="number">1</span>]+a3+item[<span class="number">2</span>]+a4+item[<span class="number">3</span>]+a5+item[<span class="number">4</span>]+a6</span><br><span class="line">    <span class="keyword">if</span> eval(c) == <span class="number">24</span>:</span><br><span class="line">        print(c+<span class="string">' = 24'</span>)</span><br></pre></td></tr></table></figure>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>一句话：通过排列组合的方式，遍历所有可能性，输出符合条件的表达式。<br>代码具体分析：</p>
<ul>
<li><p><code>a1, a2, a3, a4, a5, a6 = a.split(&#39; &#39;)</code><br>链式赋值</p>
</li>
<li><p><code>l = list(product(i, repeat=5))</code><br>这行代码的意思是将“+-*/空格”进行排列组合（自身笛卡尔积），遍历其组成5个元素时的排列组合所有情况（因为a1到a6之间的间隙为5，所以这里repeat次数为5）。</p>
</li>
</ul>
<p>简单的案例：</p>
   <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product(<span class="string">'ABCD'</span>, repeat=<span class="number">2</span>):</span><br><span class="line">  <span class="keyword">print</span> (<span class="string">''</span>.join(i),end=<span class="string">' '</span>)</span><br></pre></td></tr></table></figure>
<p>   输出结果：AA AB AC AD BA BB BC BD CA CB CC CD DA DB DC DD </p>
<p>函数具体理解：</p>
<p>  product 用于求多个可迭代对象的笛卡尔积(Cartesian Product)。</p>
<p>  特性：product(A, B) 等价于 ((x,y) for x in A for y in B)。</p>
<p>   一般使用形式：</p>
<p>  itertools.product(*iterables, repeat=1) </p>
<p>  iterables是可迭代对象,repeat指定iterable重复几次。</p>
<p>相关链接：</p>
<ul>
<li><a href="https://python.01314.cn/tag/product" target="_blank" rel="noopener">python itertools模块实现排列组合</a></li>
<li><a href="https://jingyan.baidu.com/article/154b46318c269d69ca8f41a6.html" target="_blank" rel="noopener">快速理解笛卡尔积</a></li>
</ul>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这是人工智能课（我的选修课，不是我的专业课）上布置的小作业，作业具体要求是：</p>
<p>请在数字之间填上加减乘除或者空这五种符号，让等式可以成立，1 2 3 … 9 = 2008（空符号就是把两位或多位数字合成一个数字）</p>
<p>作业源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line">a = <span class="string">'1 2 3 4 5 6 7 8 9'</span></span><br><span class="line">a1, a2, a3, a4, a5, a6, a7, a8, a9 = a.split(<span class="string">' '</span>)</span><br><span class="line">i = [<span class="string">''</span>, <span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'*'</span>, <span class="string">'/'</span>]</span><br><span class="line">l = list(product(i, repeat=<span class="number">8</span>))</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> l:</span><br><span class="line">    c = a1+item[<span class="number">0</span>]+a2+item[<span class="number">1</span>]+a3+item[<span class="number">2</span>]+a4+item[<span class="number">3</span>]+a5+item[<span class="number">4</span>]+a6+item[<span class="number">5</span>]+a7+item[<span class="number">6</span>]+a8+item[<span class="number">7</span>]+a9</span><br><span class="line">    <span class="keyword">if</span> eval(c) == <span class="number">2008</span>:</span><br><span class="line">        print(c+<span class="string">' = 2008'</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果：</p>
<p>1+2+345*6+7-8*9 = 2008<br>1+2+345*6-7*8-9 = 2008</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>原创</tag>
        <tag>Python3</tag>
      </tags>
  </entry>
  <entry>
    <title>快速上手openCV人脸识别</title>
    <url>/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BopenCV%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="程序运行效果"><a href="#程序运行效果" class="headerlink" title="程序运行效果"></a>程序运行效果</h1><p><img src="/img/opcv1.png" alt="yunxingjietu1"><br><img src="/img/opcv2.png" alt="yunxingjietu2"></p>
<h1 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h1><p>需要安装openCV库（如果用的是python的虚拟环境，numpy可能也要提前手动安装一下）</p>
<p>我这里是用清华的镜像安装的：</p>
<p>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a> opencv-python</p>
<p>贴一些国内源，阿里云也挺好。</p>
<p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple/</a></p>
<p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple/</a></p>
<p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a></p>
<p>华中理工大学：<a href="http://pypi.hustunique.com/" target="_blank" rel="noopener">http://pypi.hustunique.com/</a></p>
<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">import</span> tkinter.filedialog</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line"></span><br><span class="line">root = tkinter.Tk()</span><br><span class="line">root.title(<span class="string">"人脸识别程序"</span>)</span><br><span class="line">root.geometry(<span class="string">"399x100"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    file_path = tkinter.filedialog.askopenfilename(title=<span class="string">u'选择文件'</span>, initialdir=<span class="string">r'C:\Program Files'</span>)</span><br><span class="line">    <span class="comment"># 指定图片的人脸识别然后存储</span></span><br><span class="line">    <span class="comment"># img = cv.imread("test.jpg")</span></span><br><span class="line">    img = cv.imread(file_path)</span><br><span class="line">    face_color = (<span class="number">222</span>,<span class="number">156</span>,<span class="number">83</span>)<span class="comment">#莫兰蒂橘色</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将图像转换为灰度图像</span></span><br><span class="line">    grey = cv.cvtColor(img, cv.COLOR_BGR2GRAY)</span><br><span class="line">    <span class="comment"># 加载脸部识别的分类器</span></span><br><span class="line">    classfier = cv.CascadeClassifier(</span><br><span class="line">        cv.data.haarcascades + <span class="string">"haarcascade_frontalface_alt2.xml"</span>)</span><br><span class="line">    <span class="comment"># classfier = cv.CascadeClassifier(</span></span><br><span class="line">    <span class="comment">#     cv.data.haarcascades + "haarcascade_profileface.xml")</span></span><br><span class="line">    <span class="comment"># 探测图片中的人脸</span></span><br><span class="line">    faceRects = classfier.detectMultiScale(</span><br><span class="line">        grey, scaleFactor=<span class="number">1.2</span>, minNeighbors=<span class="number">3</span>, minSize=(<span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">    <span class="keyword">if</span> len(faceRects) &gt; <span class="number">0</span>:  <span class="comment"># 大于0表示检测到人脸</span></span><br><span class="line">        <span class="keyword">for</span> faceRect <span class="keyword">in</span> faceRects:  <span class="comment"># 针对每个人脸单独框出来</span></span><br><span class="line">            x, y, w, h = faceRect</span><br><span class="line">            cv.rectangle(img, (x - <span class="number">10</span>, y - <span class="number">10</span>), (x + w + <span class="number">10</span>,</span><br><span class="line">                                                 y + h + <span class="number">10</span>), face_color, <span class="number">3</span>)  <span class="comment"># 3，控制绿色框的粗细</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入图像</span></span><br><span class="line">    cv.imwrite(<span class="string">'output1.jpg'</span>, img)</span><br><span class="line">    cv.imshow(<span class="string">"Dettect Face"</span>, img)</span><br><span class="line">    cv.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv.destroyAllWindows()</span><br><span class="line">    print(<span class="string">"识别完成！"</span>)<span class="comment">#debug用 看看有没有执行完</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funcII</span><span class="params">()</span>:</span></span><br><span class="line">    file_path = tkinter.filedialog.askopenfilename(title=<span class="string">u'选择文件'</span>, initialdir=<span class="string">r'C:\Program Files'</span>)</span><br><span class="line">    <span class="comment"># 指定图片的识别然后存储</span></span><br><span class="line">    <span class="comment"># img = cv.imread("test.jpg")</span></span><br><span class="line">    img = cv.imread(file_path)</span><br><span class="line">    eye_color = (<span class="number">137</span>,<span class="number">190</span>,<span class="number">178</span>)<span class="comment">#莫兰蒂蓝色</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将图像转换为灰度图像</span></span><br><span class="line">    grey = cv.cvtColor(img, cv.COLOR_BGR2GRAY)</span><br><span class="line">    <span class="comment"># 加载眼部识别的分类器</span></span><br><span class="line">    classfier = cv.CascadeClassifier(</span><br><span class="line">        cv.data.haarcascades + <span class="string">"haarcascade_eye.xml"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 探测图片中的人眼</span></span><br><span class="line">    faceRects = classfier.detectMultiScale(</span><br><span class="line">        grey, scaleFactor=<span class="number">1.2</span>, minNeighbors=<span class="number">3</span>, minSize=(<span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">    <span class="keyword">if</span> len(faceRects) &gt; <span class="number">0</span>:  <span class="comment"># 大于0表示检测到眼睛</span></span><br><span class="line">        <span class="keyword">for</span> faceRect <span class="keyword">in</span> faceRects:  <span class="comment"># 针对每个眼睛单独框出来</span></span><br><span class="line">            x, y, w, h = faceRect</span><br><span class="line">            cv.ellipse(img,(int(x+<span class="number">0.5</span>*w),int(y+<span class="number">0.5</span>*h)),(<span class="number">16</span>,<span class="number">9</span>),<span class="number">0</span>,<span class="number">0</span>,<span class="number">360</span>,eye_color,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">            <span class="comment"># cv.rectangle(img, (x - 10, y - 10), (x + w + 10,</span></span><br><span class="line">            <span class="comment">#                                      y + h + 10), eye_color, 3)  # 3，控制绿色框的粗细</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入图像</span></span><br><span class="line">    cv.imwrite(<span class="string">'output1.jpg'</span>, img)</span><br><span class="line">    cv.imshow(<span class="string">"Dettect Face"</span>, img)</span><br><span class="line">    cv.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv.destroyAllWindows()</span><br><span class="line">    print(<span class="string">"识别完成！"</span>)<span class="comment">#debug用 看看有没有执行完</span></span><br><span class="line"><span class="comment">#循环主体</span></span><br><span class="line">click_button = tkinter.Button(root,text=<span class="string">"检测人脸"</span>,command=func)</span><br><span class="line">click_button.pack()</span><br><span class="line">clickII_button = tkinter.Button(root,text=<span class="string">"检测眼睛"</span>,command=funcII)</span><br><span class="line">clickII_button.pack()</span><br><span class="line">quit_button = tkinter.Button(root,text=<span class="string">"退出程序"</span>,command=root.quit)</span><br><span class="line">quit_button.pack()</span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure>

<p>注意事项：</p>
<ul>
<li>有些图片识别的准确率较低（眼部识别准确率最低）</li>
<li>就算增加侧脸识别功能，有些图片的人脸依旧识别无能</li>
<li>而且我的openCV支持不了中文路径，一旦选择的图片路径中有中文，会报错</li>
</ul>
<h1 id="原理部分"><a href="#原理部分" class="headerlink" title="原理部分"></a>原理部分</h1><p>程序主要运行步骤：</p>
<ul>
<li>导入图像</li>
<li>将图像转换为灰度图像（因为电子计算机，状态0和1；具体原因不赘述）</li>
<li>加载相应分类器</li>
<li>检测图片中的人脸，标注并显示</li>
</ul>
<p>循环主体部分是添加的功能，可以让用户选择加入图片和选择识别什么。</p>
<p><a href="https://www.kancloud.cn/aollo/aolloopencv/262768" target="_blank" rel="noopener">openCV中文文档</a></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>原创</tag>
        <tag>Python3</tag>
        <tag>openCV</tag>
        <tag>人脸识别</tag>
        <tag>人工智障</tag>
      </tags>
  </entry>
  <entry>
    <title>通过编写中级计算器了解栈的应用</title>
    <url>/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E9%80%9A%E8%BF%87%E7%BC%96%E5%86%99%E4%B8%AD%E7%BA%A7%E8%AE%A1%E7%AE%97%E5%99%A8%E4%BA%86%E8%A7%A3%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="实机演示"><a href="#实机演示" class="headerlink" title="实机演示"></a>实机演示</h1><p>链接：<a href="https://pan.baidu.com/s/16y5Osxkc0p_2nkv1_Gap7g" target="_blank" rel="noopener">https://pan.baidu.com/s/16y5Osxkc0p_2nkv1_Gap7g</a><br>提取码：2m7d </p>
<h1 id="源码-amp-可执行程序"><a href="#源码-amp-可执行程序" class="headerlink" title="源码&amp;可执行程序"></a>源码&amp;可执行程序</h1><p>头文件Cal.h</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __CAL_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __CAL_H__</span></span><br><span class="line"><span class="comment">//防止一个源文件两次包含同一个头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Capacity 114514</span></span><br><span class="line"><span class="comment">//用来存放数字的结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Number</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">float</span> Data[Capacity];</span><br><span class="line">    <span class="keyword">int</span> top;</span><br><span class="line">&#125;number;</span><br><span class="line"><span class="comment">//用来存放符号的结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">FuHao</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> Data[Capacity];</span><br><span class="line">    <span class="keyword">int</span> top;</span><br><span class="line">&#125;fuhao;</span><br><span class="line"><span class="comment">//实例化结构体</span></span><br><span class="line">number Numbers;</span><br><span class="line">fuhao FuHaos;</span><br><span class="line"><span class="comment">//Initialize</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitialNum</span><span class="params">(number *ra)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitalFuHao</span><span class="params">(fuhao *op)</span></span>;</span><br><span class="line"><span class="comment">//cls</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ClearNumber</span><span class="params">(number *ra)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ClearFuHao</span><span class="params">(fuhao *op)</span></span>;</span><br><span class="line"><span class="comment">//Push</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pushnumber</span><span class="params">(number *ra,<span class="keyword">float</span> e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pushfuhao</span><span class="params">(fuhao *op,<span class="keyword">char</span> e)</span></span>;</span><br><span class="line"><span class="comment">//pop</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Popnumber</span><span class="params">(number *ra,<span class="keyword">float</span> *e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Popfuhao</span><span class="params">(fuhao *op,<span class="keyword">char</span> *e)</span></span>;</span><br><span class="line"><span class="comment">//peek</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">PeekTopNumber</span><span class="params">(number *ra)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">PeekTopfuhao</span><span class="params">(fuhao *op)</span></span>;</span><br><span class="line"><span class="comment">//输入符号是否合法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsValid</span><span class="params">(<span class="keyword">char</span> ch)</span></span>;</span><br><span class="line"><span class="comment">//定义符号运算顺序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Level</span><span class="params">(<span class="keyword">char</span> s)</span></span>;</span><br><span class="line"><span class="comment">//比较运算顺序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LevelCompare</span><span class="params">(<span class="keyword">char</span> op1,<span class="keyword">char</span> op2)</span></span>;</span><br><span class="line"><span class="comment">//初级计算器</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">CalculateI</span><span class="params">(<span class="keyword">float</span> a,<span class="keyword">float</span> b,<span class="keyword">char</span> c)</span></span>;</span><br><span class="line"><span class="comment">//高级计算器</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">CalculateII</span><span class="params">(number *ra,fuhao *op)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>这个文件“Cal.c”我放了主要函数的内容</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Cal.h"</span></span></span><br><span class="line"><span class="comment">//Initialize</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitialNum</span><span class="params">(number *ra)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ra-&gt;top = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitalFuHao</span><span class="params">(fuhao *op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    op-&gt;top = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Clear</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ClearNumber</span><span class="params">(number *ra)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ra-&gt;top = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ClearFuHao</span><span class="params">(fuhao *op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    op-&gt;top = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Push</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pushnumber</span><span class="params">(number *ra,<span class="keyword">float</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ra-&gt;top == Capacity<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ra-&gt;top++;</span><br><span class="line">    ra-&gt;Data[ra-&gt;top] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pushfuhao</span><span class="params">(fuhao *op,<span class="keyword">char</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(op-&gt;top == Capacity<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    op-&gt;top++;</span><br><span class="line">    op-&gt;Data[op-&gt;top] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//pop</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Popnumber</span><span class="params">(number *ra,<span class="keyword">float</span> *e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ra-&gt;top == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    *e = ra-&gt;Data[ra-&gt;top];</span><br><span class="line">    ra-&gt;top--;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Popfuhao</span><span class="params">(fuhao *op,<span class="keyword">char</span> *e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(op-&gt;top == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    *e = op-&gt;Data[op-&gt;top];</span><br><span class="line">    op-&gt;top--;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//peek</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">PeekTopNumber</span><span class="params">(number *ra)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ra-&gt;top == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> ra-&gt;Data[ra-&gt;top];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">PeekTopfuhao</span><span class="params">(fuhao *op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(op-&gt;top == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'N'</span>;</span><br><span class="line">    <span class="keyword">return</span> op-&gt;Data[op-&gt;top];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输入符号是否合法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsValid</span><span class="params">(<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ch == <span class="string">'('</span> || ch == <span class="string">')'</span> || ch == <span class="string">'+'</span> || ch == <span class="string">'-'</span> || ch == <span class="string">'*'</span> || ch == <span class="string">'/'</span> || ch == <span class="string">'='</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义符号运算顺序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Level</span><span class="params">(<span class="keyword">char</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(s)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'('</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">')'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//比较运算顺序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LevelCompare</span><span class="params">(<span class="keyword">char</span> op1,<span class="keyword">char</span> op2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Level(op1) &lt; Level(op2))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初级计算器</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">CalculateI</span><span class="params">(<span class="keyword">float</span> a,<span class="keyword">float</span> b,<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(c)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">        <span class="keyword">return</span> a-b;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">        <span class="keyword">return</span> a*b;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">        <span class="keyword">if</span>(b == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> a/b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//高级计算器</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">CalculateII</span><span class="params">(number *ra,fuhao *op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> a,b;</span><br><span class="line">    <span class="keyword">char</span> ch,s;</span><br><span class="line">    Pushfuhao(op,<span class="string">'='</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入计算式(键入等号后回车以表示输入完成):"</span>);</span><br><span class="line">    ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch != <span class="string">'='</span> || PeekTopfuhao(op) != <span class="string">'='</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*if(!IsValid(ch))</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            //float temp;</span></span><br><span class="line"><span class="comment">            //temp = ch - '0';</span></span><br><span class="line"><span class="comment">			int topT = 0;</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">			char xx[64];</span></span><br><span class="line"><span class="comment">			if(topT&gt;=64)&#123;</span></span><br><span class="line"><span class="comment">				exit(0);</span></span><br><span class="line"><span class="comment">			&#125;</span></span><br><span class="line"><span class="comment">			xx[topT] = ch;</span></span><br><span class="line"><span class="comment">			topT++;</span></span><br><span class="line"><span class="comment">			for(int i = 63;i&gt;=topT;i--)&#123;</span></span><br><span class="line"><span class="comment">				xx[i] = 0;</span></span><br><span class="line"><span class="comment">				</span></span><br><span class="line"><span class="comment">			&#125;</span></span><br><span class="line"><span class="comment">			printf(xx);</span></span><br><span class="line"><span class="comment">			printf(&amp;xx[topT]);</span></span><br><span class="line"><span class="comment">			float tempT;</span></span><br><span class="line"><span class="comment">			tempT = atof(xx);</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">			//printf("%f",&amp;tempT);</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">            ch = getchar();</span></span><br><span class="line"><span class="comment">            while(!IsValid(ch))</span></span><br><span class="line"><span class="comment">            &#123;	//tempT = atof(xx)；</span></span><br><span class="line"><span class="comment">                //</span></span><br><span class="line"><span class="comment">                ch = getchar();</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            Pushnumber(ra,tempT);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">		<span class="keyword">if</span>(!IsValid(ch))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//float temp;</span></span><br><span class="line">			<span class="comment">//temp = ch - '0';</span></span><br><span class="line">			<span class="keyword">int</span> topT = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">char</span> xx[<span class="number">999</span>];</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">999</span>;i&gt;=topT;i--)</span><br><span class="line">			&#123;</span><br><span class="line">			xx[i] = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">while</span>(!IsValid(ch))</span><br><span class="line">			&#123;	<span class="comment">//tempT = atof(xx)；</span></span><br><span class="line">				<span class="comment">//</span></span><br><span class="line">				xx[topT] = ch;</span><br><span class="line">				topT++;</span><br><span class="line">				ch = getchar();</span><br><span class="line">				<span class="keyword">if</span>(topT&gt;=<span class="number">999</span>)</span><br><span class="line">				&#123;</span><br><span class="line">				<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">		<span class="keyword">float</span> tempT;</span><br><span class="line">		tempT = atof(xx);</span><br><span class="line">		Pushnumber(ra,tempT);</span><br><span class="line">		&#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(PeekTopfuhao(op) == <span class="string">'('</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(ch == <span class="string">')'</span>)</span><br><span class="line">                    Popfuhao(op,&amp;s);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Pushfuhao(op,ch);</span><br><span class="line">                ch = getchar();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(!LevelCompare(PeekTopfuhao(op),ch))</span><br><span class="line">                &#123;</span><br><span class="line">                    Pushfuhao(op,ch);</span><br><span class="line">                    ch = getchar();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Popnumber(ra,&amp;b);</span><br><span class="line">                    Popnumber(ra,&amp;a);</span><br><span class="line">                    Popfuhao(op,&amp;s);</span><br><span class="line">                    Pushnumber(ra,CalculateI(a,b,s));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"结果是:%f\n"</span>,PeekTopNumber(ra));</span><br><span class="line">	<span class="comment">//number *p = &amp;Numbers;</span></span><br><span class="line">	<span class="comment">//printf(""p-&gt;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个文件是“main.c”文件，程序的入口</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Cal.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Cal.c"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    InitialNum(&amp;Numbers);</span><br><span class="line">    InitalFuHao(&amp;FuHaos);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">114514</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        CalculateII(&amp;Numbers,&amp;FuHaos);</span><br><span class="line">        ClearNumber(&amp;Numbers);</span><br><span class="line">        ClearFuHao(&amp;FuHaos);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>链接：<a href="https://pan.baidu.com/s/15pkHOv0KHqH50FUSNgmV3g" target="_blank" rel="noopener">https://pan.baidu.com/s/15pkHOv0KHqH50FUSNgmV3g</a><br>提取码：6wlh </p>
<p>内含源码和可执行程序</p>
<h1 id="函数流程图"><a href="#函数流程图" class="headerlink" title="函数流程图"></a>函数流程图</h1><p><img src="/img/while.jpg" alt="while"></p>
<h1 id="视频解说"><a href="#视频解说" class="headerlink" title="视频解说"></a>视频解说</h1><p>链接：<a href="https://pan.baidu.com/s/1YF8-y15lb6M82FGxNWdPug" target="_blank" rel="noopener">https://pan.baidu.com/s/1YF8-y15lb6M82FGxNWdPug</a><br>提取码：bd2c</p>
<p>几个口误的地方：</p>
<p>讲解视频上：12分40秒左右<br>并不是“是需要”或者说是“必须”。这里严格意义上来说没有说正确。具体的栈使用情况还需要看具体的情况。我这里说的终止符首位相碰，是针对我写的这个程序而言的。<br>讲解视频下：26：31<br>此处口误，除号优先级比等号要高，所以存入符号栈</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>原创</tag>
        <tag>C语言</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>用hexo搭建博客</title>
    <url>/hexo/2020-05-04/%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="为什么我选择用hexo搭建博客，以及一些个人经验"><a href="#为什么我选择用hexo搭建博客，以及一些个人经验" class="headerlink" title="为什么我选择用hexo搭建博客，以及一些个人经验"></a>为什么我选择用hexo搭建博客，以及一些个人经验</h1><h2 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h2><h3 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h3><p>前些阵子，网上冲浪的时候，我刷到了其他人的博客，唤起了我很多的回忆，踌躇良久，决定重新搭建一个个人博客。<br>为什么说是重新呢？因为以前我用Wordpress搭建过相关的博客。那个时候我租的服务器在欧洲，国内访问还比较慢，再加上学业繁忙无心经营、租服务器的支出较大，渐渐地，在服务器以及域名过期后，我没有续租了。<br>现在留给我的大概只有空间相册中保存的这两张图片了吧。<br><img src="/img/z91.jpg" alt="古早Wordpress博客手机端界面预览图1"><br><img src="/img/z92.jpg" alt="古早Wordpress博客手机端界面预览图2"></p>
<h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>我用博客主要来记录一些随笔、分享一些有趣的程序代码、计算机相关之类的文章（或是原创，或是转载引用）。<br>我个人目前的职业方向是游戏制作人，现在游戏设计相关专业在读。我对技术向的内容感兴趣，分享的内容也偏这些方面。<br>个人擅长的是：文案策划、游戏策划。所以这块方面的内容我打包票会写得比较精良。<br>会的东西：编曲、编程（流行的语言大致都会一些，比较熟练的是C、python、java、C#、bat批处理、processing）、视频剪辑、文案&amp;游戏策划、游戏引擎（unity和UE4）……</p>
<h2 id="建站工具的比较"><a href="#建站工具的比较" class="headerlink" title="建站工具的比较"></a>建站工具的比较</h2><p>我个人比较了解的是：Wordpress和hexo，就谈它们两个叭。<br>1.Wordpress：</p>
<ul>
<li>需搭配付费服务器和域名（贵 很贵 非常贵）</li>
<li>安装简单</li>
<li>搭配dashboard，搭建好后更新文章和界面便捷</li>
<li>插件较多，可操作性强</li>
<li>上限高，下限低（入门简单，扩展性高）</li>
<li>自带seo优化<br>（综合：适合中小型网站，适合搭载博客）<br>（搭配强大的插件，也适合作中小型企业网站）</li>
</ul>
<p>2.hexo</p>
<ul>
<li>支持免费建站，建站成本低（可搭配github pages，也可搭配其他服务器）</li>
<li>稳定</li>
<li>门槛较高</li>
<li>无seo优化，需手动优化<br>（综合：比较适合技术宅作个人博客）<br>（不适合中小型网站）<br>相关优质链接：<a href="https://www.jianshu.com/p/c4f145fdd637" target="_blank" rel="noopener">博客搭建可行性方案</a></li>
</ul>
<h2 id="使用hexo建站流程"><a href="#使用hexo建站流程" class="headerlink" title="使用hexo建站流程"></a>使用hexo建站流程</h2><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><p>官方文档：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官方文档</a><br>小白教程A：<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo搭建教程</a>（这个比较综合和全）<br>小白教程B：<a href="https://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">手把手教你用Hexo+Github 搭建属于自己的博客</a>（这个前期比较详细，就是比较老了，适合作参考）<br>小白教程C：<a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="noopener">hexo详细搭建教程</a>（适合作参考）<br>hexo官方主题：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官方主题集合</a><br>Markdown基础语法：<a href="https://segmentfault.com/markdown" target="_blank" rel="noopener">Markdown基础语法</a><br>Markdown语法大全：<a href="https://www.jianshu.com/p/ebe52d2d468f" target="_blank" rel="noopener">Markdown语法大全(超级版)</a></p>
<h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><p>使用Termux手机端建站：<a href="https://www.sqlsec.com/2018/05/termux.html?yyue=a21bo.50862.201879" target="_blank" rel="noopener">Termux 高级终端安装使用配置教程</a><br>博客美化：<a href="https://blog.csdn.net/weixin_40539125/article/details/89682652" target="_blank" rel="noopener">hexo的美化——拓展篇</a><br>博客美化II：<a href="https://www.jianshu.com/p/6051077119d1" target="_blank" rel="noopener">个人博客进行深度美化</a><br>迁移：<a href="https://www.jianshu.com/p/153490a029a5" target="_blank" rel="noopener">博客迁移到新电脑</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>随笔</tag>
        <tag>hexo</tag>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>通过processing快速入门编程</title>
    <url>/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E9%80%9A%E8%BF%87processing%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><em>更新中</em></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>原创</tag>
        <tag>processing</tag>
        <tag>互动艺术</tag>
      </tags>
  </entry>
  <entry>
    <title>用桌面应用程序绘制分形</title>
    <url>/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/2020-05-05/%E7%94%A8%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%BB%98%E5%88%B6%E5%88%86%E5%BD%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="用桌面应用程序绘制分形和函数"><a href="#用桌面应用程序绘制分形和函数" class="headerlink" title="用桌面应用程序绘制分形和函数"></a>用桌面应用程序绘制分形和函数</h1><h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><p>运行程序，默认绘制出如图样式的朱莉亚集合<br><img src="/img/c1.png" alt="zhuliya"><br>按下键盘数字“2”可绘制曼德博集<br><img src="/img/mandebo.png" alt="mandebo"><br>按数字键盘上的“3”到“6”可展示朱利亚集合的不同种样式 如下图所示<br>按下3效果：<br><img src="/img/c3.png" alt="c3"><br>按下4效果：<br><img src="/img/c4.png" alt="c4"><br>按下5效果：<br><img src="/img/c5.png" alt="c5"><br>按下6效果：<br><img src="/img/c6.png" alt="c6"><br>按下数字键盘上的“7”到“9”以及“0”，进入函数的绘制模块。屏幕上会分别展示如下几何图形的绘制。<br>按下7效果：<br><img src="/img/7.png" alt="7"><br>按下8效果：<br><img src="/img/8.png" alt="8"><br>按下9效果：<br><img src="/img/9.png" alt="9"><br>按下0效果：<br><img src="/img/0.png" alt="10"><br>（除正弦函数外）<br>在函数的绘制模块中，按键盘上的WASD可以进行图像的移动。<br>特殊情况：按下“0”后（即绘制正弦函数的情况），再按AD不能进行图像的平移，按AD只能改变图像的振幅大小。而WS可以对图像进行上下平移。<br>你可以进入如下链接来观看展示效果。<br><a href="https://pan.baidu.com/s/10YAioro0_Y03ag5FYsK9Xg" target="_blank" rel="noopener">录制链接,提取码:qect</a></p>
<h1 id="理论原理"><a href="#理论原理" class="headerlink" title="理论原理"></a>理论原理</h1><p>完整代码见：<a href="https://pan.baidu.com/s/1WFM2QdmEWAbILqmaM4i40Q" target="_blank" rel="noopener">完整源码,提取码:t0gc</a></p>
<h2 id="按键部分的核心代码"><a href="#按键部分的核心代码" class="headerlink" title="按键部分的核心代码"></a>按键部分的核心代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line">		<span class="keyword">switch</span> (wParam) &#123;</span><br><span class="line">		<span class="keyword">case</span>  <span class="string">'1'</span>:</span><br><span class="line">			oper = <span class="string">'1'</span>;</span><br><span class="line">			NUMx = <span class="number">0.02</span>;</span><br><span class="line">			NUMy = <span class="number">0.01</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">			oper = <span class="string">'2'</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">			oper = <span class="string">'1'</span>;</span><br><span class="line">			NUMx = <span class="number">0.2</span>;</span><br><span class="line">			NUMy = <span class="number">0.2</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'4'</span>:</span><br><span class="line">			oper = <span class="string">'1'</span>;</span><br><span class="line">			NUMx = <span class="number">0.5</span>;</span><br><span class="line">			NUMy = <span class="number">0.2</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'5'</span>:</span><br><span class="line">			oper = <span class="string">'1'</span>;</span><br><span class="line">			NUMx = <span class="number">0.7</span>;</span><br><span class="line">			NUMy = <span class="number">0.2</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'6'</span>:</span><br><span class="line">			oper = <span class="string">'1'</span>;</span><br><span class="line">			NUMx = <span class="number">0.2</span>;</span><br><span class="line">			NUMy = <span class="number">0.7</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'7'</span>:</span><br><span class="line">			oper = <span class="string">'7'</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'8'</span>:</span><br><span class="line">			oper = <span class="string">'8'</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'9'</span>:</span><br><span class="line">			oper = <span class="string">'9'</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'0'</span>:</span><br><span class="line">			oper = <span class="string">'0'</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'W'</span>:			</span><br><span class="line">			<span class="built_in">step</span> = <span class="built_in">step</span> - <span class="number">10</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'A'</span>:</span><br><span class="line">			</span><br><span class="line">			amplitude = amplitude - <span class="number">10</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'S'</span>:			</span><br><span class="line">			<span class="built_in">step</span> = <span class="built_in">step</span> + <span class="number">10</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'D'</span>:</span><br><span class="line">			amplitude = amplitude + <span class="number">10</span>;</span><br><span class="line">			InvalidateRect(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">break</span>;</span><br></pre></td></tr></table></figure>
<p>此处的WM_KEYDOWN触发按键事件，是用来结合WM_PAINT屏幕绘制事件中的switch(oper)的不同事件(case)来达到不同的绘制效果。（除三角函数外）而WASD是通过改变像素点的横纵坐标加的值（step和amplitude）来使函数移动的。三角函数的情况中，amplitude改变的振幅大小，step使其上下移动（即改变像素点纵坐标的值）。这是最基础也最容易实现的部分。<br>以下是我对所展示的分形的数学意义的理解。<br><img src="/img/mandeboji.png" alt="mandeboji"><br><img src="/img/zhuliyaji.png" alt="zhuliyaji"><br>理解数学意义后，就可以写出绘制的代码了。更进一步的转换流程如下图。<br>曼德博集：<br><img src="/img/manzhuan.png" alt="manzhuan"><br>朱莉亚集（为了省事，朱利亚集合这里，我将Z0的横纵坐标分别以Cx,Cy表示。其中，定值复数的横纵坐标分别用NUMy、NUMy来表示，因为用变量表示能方便后续调试。按下数字按键的3到6时候，改变的其实是NUMx NUMy的值，这样就不用重复写绘制朱利亚集合的代码了。）：<br><img src="/img/zhuzhuan.png" alt="zhuzhuan"></p>
<h2 id="朱利亚集合核心代码"><a href="#朱利亚集合核心代码" class="headerlink" title="朱利亚集合核心代码"></a>朱利亚集合核心代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (Iteration &lt; IterationMax &amp;&amp; ((Zx2 + Zy2) &lt; ER2))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (Iteration == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		Zy = <span class="number">2</span> * Cx*Cy + NUMy;</span><br><span class="line">		Zx = Cx * Cx - Cy * Cy + NUMx;</span><br><span class="line">		Zx2 = Zx * Zx;</span><br><span class="line">		Zy2 = Zy * Zy;</span><br><span class="line">		Iteration++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (Iteration &gt;= <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		Zx = Zx * Zx - Zy * Zy + NUMx;</span><br><span class="line">		Zy = <span class="number">2</span> * Zx*Zy + NUMy;</span><br><span class="line">		Zx2 = Zx * Zx;</span><br><span class="line">		Zy2 = Zy * Zy;</span><br><span class="line">		Iteration++;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>函数的数学意义：<br>玫瑰花函数：x=a* sin(nθ)* cos(θ), y=a<em>sin(nθ)</em> sin(θ)；对于方程式ρ=5* sin(3<em>θ)、ρ=5</em> sin(2<em>θ)、ρ=5</em> sin(3*θ/2)，分别对应的是三叶、四叶和六叶玫瑰线；<br>阿基米德螺旋线：x=(a+pθ)cos(θ),y=(a+pθ)sin(θ);<br>圆：x^2+y^2=c^2;即x=cos(θ),y=sin(θ);<br>正弦函数：y=sinx;</p>
<h2 id="函数部分的核心代码"><a href="#函数部分的核心代码" class="headerlink" title="函数部分的核心代码"></a>函数部分的核心代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (oper) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">			zhuliyajihe:</span><br><span class="line">				&#123;<span class="keyword">int</span> iX, iY;</span><br><span class="line">				<span class="keyword">double</span> Cx, Cy;</span><br><span class="line">				<span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line">				<span class="keyword">double</span> PixelHeight;</span><br><span class="line">				PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">				COLORREF color;</span><br><span class="line">				<span class="keyword">double</span> Zx, Zy;</span><br><span class="line">				<span class="keyword">double</span> Zx2, Zy2;</span><br><span class="line">				<span class="keyword">double</span> a = <span class="number">0</span>; <span class="keyword">double</span> b = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">int</span> Iteration;</span><br><span class="line">				<span class="keyword">double</span> ER2;</span><br><span class="line">				ER2 = EscapeRadius * EscapeRadius;</span><br><span class="line">				<span class="keyword">for</span> (iY = <span class="number">0</span>; iY &lt; iYmax; iY++)</span><br><span class="line">				&#123;</span><br><span class="line">					Cy = CyMin + iY * PixelHeight;</span><br><span class="line">					<span class="keyword">if</span> (<span class="built_in">fabs</span>(Cy) &lt; PixelHeight / <span class="number">2</span>) Cy = <span class="number">0.0</span>;</span><br><span class="line">					<span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; iXmax; iX++)</span><br><span class="line">					&#123;</span><br><span class="line">						Cx = CxMin + iX * PixelHeight;</span><br><span class="line">						Zx = Zy = Zy2 = Zx2 = <span class="number">0.0</span>;</span><br><span class="line">						Iteration = <span class="number">0</span>;</span><br><span class="line">						<span class="keyword">while</span> (Iteration &lt; IterationMax &amp;&amp; ((Zx2 + Zy2) &lt; ER2))</span><br><span class="line">						&#123;</span><br><span class="line">							<span class="keyword">if</span> (Iteration == <span class="number">0</span>)</span><br><span class="line">							&#123;</span><br><span class="line"></span><br><span class="line">								Zy = <span class="number">2</span> * Cx*Cy + NUMy;</span><br><span class="line">								Zx = Cx * Cx - Cy * Cy + NUMx;</span><br><span class="line">								Zx2 = Zx * Zx;</span><br><span class="line">								Zy2 = Zy * Zy;</span><br><span class="line">								Iteration++;</span><br><span class="line">							&#125;</span><br><span class="line">							<span class="keyword">if</span> (Iteration &gt;= <span class="number">1</span>)</span><br><span class="line">							&#123;</span><br><span class="line">								Zx = Zx * Zx - Zy * Zy + NUMx;</span><br><span class="line">								Zy = <span class="number">2</span> * Zx*Zy + NUMy;</span><br><span class="line">								Zx2 = Zx * Zx;</span><br><span class="line">								Zy2 = Zy * Zy;</span><br><span class="line">								Iteration++;</span><br><span class="line">							&#125;</span><br><span class="line"></span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">if</span> (Iteration == IterationMax)</span><br><span class="line">							color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">							color = RGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);<span class="comment">//背景色白色</span></span><br><span class="line"></span><br><span class="line">						SetPixel(hdc, iX, iY, color);</span><br><span class="line">						<span class="comment">//</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			mandeboji:</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">				&#123;<span class="keyword">int</span> iX, iY;<span class="comment">//像素位置</span></span><br><span class="line">				<span class="keyword">double</span> Cx, Cy;<span class="comment">//数学公式中逻辑坐标</span></span><br><span class="line">				<span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line">				<span class="keyword">double</span> PixelHeight;</span><br><span class="line">				PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">				COLORREF color;</span><br><span class="line">		</span><br><span class="line">				<span class="keyword">double</span> Zx, Zy;</span><br><span class="line">				<span class="keyword">double</span> Zx2, Zy2;</span><br><span class="line">				<span class="keyword">double</span> a = <span class="number">0</span>; <span class="keyword">double</span> b = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">int</span> Iteration;<span class="comment">//记录递归次数</span></span><br><span class="line">				<span class="keyword">double</span> ER2;</span><br><span class="line">				ER2 = EscapeRadius * EscapeRadius;</span><br><span class="line">				<span class="keyword">for</span> (iY = <span class="number">0</span>; iY &lt; iYmax; iY++)</span><br><span class="line">				&#123;</span><br><span class="line">					Cy = CyMin + iY * PixelHeight;</span><br><span class="line">					<span class="keyword">if</span> (<span class="built_in">fabs</span>(Cy) &lt; PixelHeight / <span class="number">2</span>) Cy = <span class="number">0.0</span>;</span><br><span class="line">					<span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; iXmax; iX++)</span><br><span class="line">					&#123;</span><br><span class="line">						Cx = CxMin + iX * PixelHeight;</span><br><span class="line">						Zx = Zy = Zy2 = Zx2 = <span class="number">0.0</span>;</span><br><span class="line">						Iteration = <span class="number">0</span>;</span><br><span class="line">						<span class="keyword">while</span> (Iteration &lt; IterationMax &amp;&amp; ((Zx2 + Zy2) &lt; ER2))</span><br><span class="line">						&#123;</span><br><span class="line"></span><br><span class="line">							Zy = <span class="number">2</span> * Zx*Zy + Cy;</span><br><span class="line">							Zx = Zx2 - Zy2 + Cx;</span><br><span class="line">							Zx2 = Zx * Zx;</span><br><span class="line">							Zy2 = Zy * Zy;</span><br><span class="line">							Iteration++;</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">if</span> (Iteration == IterationMax)</span><br><span class="line">							color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">							color = RGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);<span class="comment">//背景色白色</span></span><br><span class="line"></span><br><span class="line">						SetPixel(hdc, iX, iY, color);</span><br><span class="line">						<span class="comment">//</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;				</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			disanzhe:</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'0'</span>:</span><br><span class="line">				&#123;<span class="keyword">int</span> iX, iY;<span class="comment">//像素位置</span></span><br><span class="line">				<span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line">				<span class="keyword">double</span> PixelHeight;</span><br><span class="line">				PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">				COLORREF color;</span><br><span class="line">				<span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; iXmax; iX++)</span><br><span class="line">				&#123;</span><br><span class="line">					iY = <span class="built_in">sin</span>(iX*<span class="number">3.1415926</span> / <span class="number">180</span>)*amplitude+<span class="built_in">step</span>;</span><br><span class="line">					color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">					SetPixel(hdc, iX, iY, color);</span><br><span class="line">						</span><br><span class="line">					</span><br><span class="line">				&#125;				</span><br><span class="line">				&#125;<span class="comment">//c3</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			meiguihua:</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'7'</span>:</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> iX, iY;</span><br><span class="line">				<span class="keyword">int</span> iXII;</span><br><span class="line">				<span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line">				<span class="keyword">double</span> PixelHeight;</span><br><span class="line">				PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">				COLORREF color;</span><br><span class="line">				<span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; <span class="number">800</span>; iX++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">float</span> ix = iX * <span class="number">3.1415926</span> / <span class="number">180</span>;</span><br><span class="line">					iXII = <span class="number">50</span> * <span class="built_in">sin</span>(<span class="number">3</span>*ix/<span class="number">2</span>)* <span class="built_in">cos</span>(ix)+ amplitude;</span><br><span class="line">					iY = <span class="number">50</span> * <span class="built_in">sin</span>(<span class="number">3</span>*ix/<span class="number">2</span>)* <span class="built_in">sin</span>(ix)+<span class="built_in">step</span>;</span><br><span class="line">					color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">					SetPixel(hdc, iXII, iY, color);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;<span class="comment">//c4</span></span><br><span class="line">		yuan:</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'9'</span>:</span><br><span class="line">			&#123;</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">int</span> iX, iY;</span><br><span class="line">				<span class="keyword">int</span> iXII;</span><br><span class="line">				<span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line">				<span class="keyword">double</span> PixelHeight;</span><br><span class="line">				PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">				COLORREF color;</span><br><span class="line">				<span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; <span class="number">800</span>; iX++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">float</span> ix = iX * <span class="number">3.1415926</span> / <span class="number">180</span>;</span><br><span class="line">					iXII = <span class="number">50</span>*<span class="built_in">cos</span>(ix) + amplitude;</span><br><span class="line">					iY = <span class="number">50</span>*<span class="built_in">sin</span>(ix) + <span class="built_in">step</span>;</span><br><span class="line">					color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">					SetPixel(hdc, iXII, iY, color);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;<span class="comment">//c0</span></span><br><span class="line">			luoxuanxian:</span><br><span class="line">			<span class="keyword">case</span> <span class="string">'8'</span>:</span><br><span class="line">			&#123;</span><br><span class="line">				&#123;</span><br><span class="line"></span><br><span class="line">					<span class="keyword">int</span> iX, iY;</span><br><span class="line">					<span class="keyword">int</span> iXII;</span><br><span class="line">					<span class="keyword">double</span> PixelWidth = (CxMax - CxMin) / iXmax;</span><br><span class="line">					<span class="keyword">double</span> PixelHeight;</span><br><span class="line">					PixelHeight = (CyMax - CyMin) / iYmax;</span><br><span class="line">					COLORREF color;</span><br><span class="line">					<span class="keyword">for</span> (iX = <span class="number">0</span>; iX &lt; <span class="number">800</span>; iX++)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">float</span> ix = iX * <span class="number">3.1415926</span> / <span class="number">180</span>;</span><br><span class="line">						iXII = (<span class="number">5</span>+<span class="number">5</span>*ix) * <span class="built_in">cos</span>(ix) + amplitude;</span><br><span class="line">						iY = (<span class="number">5</span>+<span class="number">5</span>*ix) * <span class="built_in">sin</span>(ix) + <span class="built_in">step</span>;</span><br><span class="line">						color = RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//前景色黑色</span></span><br><span class="line">						SetPixel(hdc, iXII, iY, color);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;<span class="comment">//c8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为圆、螺旋线、玫瑰花并不是狭义上一个x对应一个y的函数，在平面坐标中需要用参数方程表示，因而我引入了一个新的临时变量iXII。最终绘制在屏幕上的像素点横坐标其实是iXII的值，而不是iX的值。<br>ix这个临时变量则是我用来进行角度和弧度转换的。平面坐标上的点对应的实数值应该是弧度，而不是角度。计算机默认运算时调用的则是角度，所以要进行换算。</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>分形部分：绘制曼德博集和茱莉亚集</p>
<p>函数部分：绘制圆、螺旋线、玫瑰花、正弦函数</p>
<p>后续我会更新程序设计分类的更多内容，比如如何用C编写生命游戏等。</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>原创</tag>
        <tag>计算机图形学</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity笔记</title>
    <url>/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/2020-05-18/Unity%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><em>日常更新中</em></p>
<h1 id="常用代码"><a href="#常用代码" class="headerlink" title="常用代码"></a>常用代码</h1><h2 id="时间相关"><a href="#时间相关" class="headerlink" title="时间相关"></a>时间相关</h2><ol>
<li><p>延时触发函数：</p>
<ol>
<li>Invoke(“函数名”, 9f);//9秒后触发此函数，间隔触发就用这个&amp;函数递归</li>
</ol>
</li>
<li><p>统计游戏时间：Time.time</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">timeUse &#x3D; Time.time-Global.sceneIITime;</span><br><span class="line">string s &#x3D; timeUse.ToString(&quot;f2&quot;);&#x2F;&#x2F;保留小数点后两位</span><br><span class="line"> GameObject.Find(&quot;Text&quot;).GetComponent&lt;Text&gt;().text &#x3D; s+&quot;s&quot;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>暂停游戏时间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Time.timescale &#x3D; 0</span><br><span class="line">    &#x2F;&#x2F;变回来：Time.timeScale &#x3D; 1;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h2 id="UI相关"><a href="#UI相关" class="headerlink" title="UI相关"></a>UI相关</h2><p>1.改变文字</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GameObject.Find(&quot;TextII&quot;).GetComponent&lt;Text&gt;().text &#x3D; &quot;&quot;+stringI;</span><br></pre></td></tr></table></figure>

<p>2.屏幕中心生成准星</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public Texture img;</span><br><span class="line">Rect rect;</span><br><span class="line">___start____</span><br><span class="line">rect &#x3D; new Rect(Screen.width &#x2F; 2 - img.width &#x2F; 2, Screen.height &#x2F; 2 - img.height &#x2F; 2, img.width, img.height);</span><br><span class="line">        Cursor.visible &#x3D; false;&#x2F;&#x2F;隐藏鼠标指针</span><br><span class="line">___________</span><br><span class="line">        void OnGUI()</span><br><span class="line">    &#123;</span><br><span class="line">        GUI.DrawTexture(rect, img);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>






<h2 id="生成物体相关"><a href="#生成物体相关" class="headerlink" title="生成物体相关"></a>生成物体相关</h2><ol>
<li><p>Instantiate(prefab, position, Quaternion.identity);//在position处生成prefab</p>
</li>
<li><p>Vector2 p = Random.insideUnitCircle;//这个函数用来生成单位圆中任意一点<br>我个人的常用搭配如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Vector2 p &#x3D; Random.insideUnitCircle;</span><br><span class="line">p &#x3D; p.normalized;</span><br><span class="line">Vector3 pos2 &#x3D; new Vector3(0, 0, 0);</span><br><span class="line">pos2.x &#x3D; p.x * Random.Range(15, 56);</span><br><span class="line">pos2.y &#x3D; p.y * Random.Range(25, 59);</span><br><span class="line">Vector3 pos3 &#x3D; this.transform.position + pos2;</span><br><span class="line">pos3.z &#x3D; 6;</span><br><span class="line">Instantiate(prefabV, pos3, Quaternion.identity);</span><br></pre></td></tr></table></figure>
</li>
<li><p>消失：Destroy(this.gameObject, 15f);</p>
<p>​            或Destroy(this.gameObject,);</p>
</li>
<li><p>获取物体位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GameObject.Find(&quot;Character&quot;).GetComponent&lt;Transform&gt;().position</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成子对象</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Instantiate(要生成的预制体, 父对象.transfrom);</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h2 id="场景相关"><a href="#场景相关" class="headerlink" title="场景相关"></a>场景相关</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">using UnityEngine.SceneManagement;</span><br><span class="line">SceneManager.LoadScene(&quot;Play&quot;);</span><br></pre></td></tr></table></figure>



<h2 id="键盘监听"><a href="#键盘监听" class="headerlink" title="键盘监听"></a>键盘监听</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (Input.GetKey(KeyCode.E))&#123; &#125;</span><br><span class="line">Input.GetKeyDown(KeyCode.A)      &#x2F;&#x2F;A键的按下检测</span><br><span class="line">Input.GetKeyUp(KeyCode.Space)      &#x2F;&#x2F;空格键按下检测</span><br></pre></td></tr></table></figure>

<h2 id="鼠标相关"><a href="#鼠标相关" class="headerlink" title="鼠标相关"></a>鼠标相关</h2><ol>
<li>锁定鼠标</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Cursor.lockState &#x3D; CursorLockMode.None;&#x2F;&#x2F;解锁</span><br><span class="line">Cursor.lockState &#x3D; CursorLockMode.Locked;&#x2F;&#x2F;锁定</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>鼠标监听</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (Input.GetMouseButton(0))&#x2F;&#x2F;左键</span><br></pre></td></tr></table></figure>



<h2 id="角色运动"><a href="#角色运动" class="headerlink" title="角色运动"></a>角色运动</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GameObject.Find(&quot;Character&quot;).GetComponent&lt;Transform&gt;().rotation&#x3D; Quaternion.Euler(90,0,0);&#x2F;&#x2F;旋转</span><br></pre></td></tr></table></figure>



<h2 id="数学相关"><a href="#数学相关" class="headerlink" title="数学相关"></a>数学相关</h2><ol>
<li>强制类型转换：string s = 变量a.ToString();//变量a强制转换成字符串</li>
</ol>
<h2 id="常用引用空间"><a href="#常用引用空间" class="headerlink" title="常用引用空间"></a>常用引用空间</h2><p>using UnityEngine.SceneManagement;<br>using UnityEngine.UI;</p>
<h2 id="邪神绿皮火车必备"><a href="#邪神绿皮火车必备" class="headerlink" title="邪神绿皮火车必备"></a>邪神绿皮火车必备</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class Global : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    public static bool flagII &#x3D; false;&#x2F;&#x2F;全局静态；在xx中调用</span><br><span class="line">    &#x2F;&#x2F;调用：Global.flagII</span><br><span class="line">    &#x2F;&#x2F;一定要说明在哪几个脚本中调用到了</span><br><span class="line">    &#x2F;&#x2F;常备：Debug.Log(&quot;生成了&quot;);</span><br><span class="line">    &#x2F;&#x2F;配乐直接挂个audio source在空物体上 要有配乐就直接生成</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GameObject.Find(&quot;ObjectName&quot;).GetComponent&lt;scriptName&gt;().enabled&#x3D;true&#x2F;false;&#x2F;&#x2F;禁用启用脚本</span><br><span class="line">&#x2F;&#x2F;SceneManager.LoadScene(&quot;scene1&quot;);</span><br><span class="line">&#x2F;&#x2F;Application.Quit();</span><br><span class="line">    private GameObject buttonObjI;</span><br><span class="line">    private GameObject buttonObjII;</span><br><span class="line">        buttonObjI &#x3D; GameObject.Find(&quot;Button&quot;);</span><br><span class="line">        buttonObjI.GetComponent&lt;Button&gt;().onClick.AddListener(yes);</span><br><span class="line">        buttonObjII &#x3D; GameObject.Find(&quot;ButtonII&quot;);</span><br><span class="line">        buttonObjII.GetComponent&lt;Button&gt;().onClick.AddListener(no);</span><br><span class="line">&#x2F;&#x2F;强制转动摄像头</span><br><span class="line">GameObject.Find(&quot;Main Camera&quot;).GetComponent&lt;Transform&gt;().transform.LookAt(GameObject.Find(&quot;SphereGeo&quot;).GetComponent&lt;Transform&gt;().position);</span><br><span class="line">transform.forward&#x2F;up&#x2F;right</span><br><span class="line">        void OnCollisionEnter(Collision collision)</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;Debug.Log(&quot;2&quot;);</span><br><span class="line">       </span><br><span class="line">        &#x2F;&#x2F;这个响了</span><br><span class="line">    &#125;</span><br><span class="line">    void OnTriggerEnter(Collision collision)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;2&quot;); </span><br><span class="line">    &#125;</span><br><span class="line">&#x2F;&#x2F;手动盒体</span><br><span class="line">        float tempxI &#x3D; this.transform.position.x;</span><br><span class="line">        float tempyI &#x3D; this.transform.position.y;</span><br><span class="line">        if (tempxI &lt;&#x3D; x + 5 &amp;&amp; tempxI &gt;&#x3D; x - 5 &amp;&amp; tempyI &lt;&#x3D; y + 5 &amp;&amp; tempyI &gt;&#x3D; y - 5)</span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>



<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="手机端UI不适配"><a href="#手机端UI不适配" class="headerlink" title="手机端UI不适配"></a>手机端UI不适配</h2><p>修改Canvas面板中的Canvas Scaler属性（没有就加组件）：</p>
<ul>
<li>UI Scale Mode:Match Width Or Height</li>
<li>Reference Resolution(以P30为基准):2340x1080</li>
<li>Match:0.5</li>
</ul>
<h2 id="模型调整相关"><a href="#模型调整相关" class="headerlink" title="模型调整相关"></a>模型调整相关</h2><ol>
<li><p>轴心不在轴心（？）</p>
<ol>
<li>建立个空物体，调整其坐标到想要的轴心位置</li>
<li>模型成为此空物体的子物体即可</li>
</ol>
</li>
<li><p>模型大小&amp;旋转匹配</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">this.transform.localScale &#x3D; new Vector3(29,29,29);</span><br><span class="line">this.transform.rotation &#x3D; Quaternion.Euler(-180f, 0f, 0f);</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h2 id="UI生成"><a href="#UI生成" class="headerlink" title="UI生成"></a>UI生成</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Instantiate(prefabUI, GameObject.Find(&quot;Canvas&quot;).GetComponent&lt;Transform&gt;());</span><br></pre></td></tr></table></figure>

<p> 解决了UI位置生成的问题</p>
<h2 id="射线检测没用"><a href="#射线检测没用" class="headerlink" title="射线检测没用"></a>射线检测没用</h2><p>is trigger不能勾选</p>
<h2 id="碰撞体相关"><a href="#碰撞体相关" class="headerlink" title="碰撞体相关"></a>碰撞体相关</h2><h3 id="OnCollisionEnter方法被触发要符合以下条件"><a href="#OnCollisionEnter方法被触发要符合以下条件" class="headerlink" title="OnCollisionEnter方法被触发要符合以下条件"></a>OnCollisionEnter方法被触发要符合以下条件</h3><p> 1 碰撞双方必须是碰撞体<br> 2 碰撞的主动方必须是刚体，注意我的用词是主动方，而不是被动方<br> 3 刚体不能勾选IsKinematic<br> 4 碰撞体不能够勾选IsTigger<br> OnCollisionEnter方法的形参对象指的是碰撞双方中没有携带OnCollisionEnter方法的一方</p>
<h3 id="OnTriggerEnter触发条件"><a href="#OnTriggerEnter触发条件" class="headerlink" title="OnTriggerEnter触发条件"></a>OnTriggerEnter触发条件</h3><p>1碰撞双方都必须是碰撞体<br>2碰撞双方其中一个碰撞体必须勾选IsTigger选项<br>3碰撞双方其中一个必须是刚体<br>4刚体的IsKinematic选项可以勾选也可以不勾选<br>只要满足上面两个条件，不管谁主动都会触发,OnTriggerEnter方法的形参对象指的是碰撞双方中没有携带OnTriggerEnter方法的一方 </p>
]]></content>
      <categories>
        <category>游戏开发</category>
      </categories>
      <tags>
        <tag>unity</tag>
        <tag>教程</tag>
        <tag>原创</tag>
      </tags>
  </entry>
</search>
